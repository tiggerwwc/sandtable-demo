{"version":3,"sources":["helper/sandCanvas.ts","components/SandTest2/SandTest2.tsx","components/SandTest1/SandTest1.tsx","layout/DemoLayout/DemoLayout.tsx","components/SandTable/SandTable.tsx","layout/MainLayout/MainLayout.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createCanvas","self","options","canvas","context","loopLogic","left","right","particles","text","nextText","shape","mouse","x","y","currentTransition","mode","layout","type","window","colors","random","uniform","drop","ribbon","onResize","screenMode","width","innerWidth","height","innerHeight","root","document","documentElement","sandElem","querySelector","clientWidth","clientHeight","style","setProperty","updateTransition","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","onMouseMove","event","preventDefault","refScaler","scale","getBoundingClientRect","offsetWidth","mousePosX","pageX","mousePosY","pageY","canvasLeft","canvasTop","top","resetMouse","onMouseOut","onTouchUp","onTouchMove","touches","onLeftClick","Math","max","classList","remove","handleClick","length","add","onRightClick","min","contains","action","tarType","direction","targetBind","addEventListener","cursor","targetUnbind","removeEventListener","forEach","call","particle","index","initX","initY","uniformFactor","floor","sqrt","rowCount","stepCount","colCount","rowUnit","colUnit","sin","cos","speed","friction","interactive","angle","targetDistX","targetDistY","initialized","particlesBackToOrigin","extra","slice","splice","loop","clearRect","alpha","maxAlpha","hasBorn","radius","bornSpeed","round","color","circleDiameter","circleStart","circleEnd","colIndex","abs","maxRadius","pureMouseParticleDistance","pointA","pointB","dx","dy","distanceTo","save","globalAlpha","fillStyle","font","fillText","char","beginPath","fill","restore","requestAnimFrame","randomBetween","randomChar","chars","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","init","slideshowContainer","existingCanvas","removeChild","createElement","appendChild","getContext","onresize","quantity","steps","push","ease","cancelAnimationFrame","createParticles","console","error","SandTest2","fullscreen","log","useEffect","someEv","createEvent","initEvent","eventName","dispatchEvent","initCanvas","className","SandTest1","title","children","useState","inputMsg","setInputMsg","msgs","setMsgs","setParticlesBackToOrigin","setMode","editTextMode","setEditTextMode","editMsg","setEditMsg","setFulScreen","join","defaultScale","minScale","maxScale","zoomIn","zoomOut","resetTransform","onClick","onChange","e","target","value","editedMsg","split","saveEditedMsg","placeholder","DemoLayout","useTranslation","t","useHistory","SandTable","aboutOpen","setAboutOpen","src","alt","onZoomChange","canvasZoom","setScale","ReactSlider","thumbClassName","trackClassName","renderThumb","props","state","valueNow","defaultValue","val","href","rel","dangerouslySetInnerHTML","__html","MainLayout","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baaf0eb4.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-undef */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-expressions */\nimport _ from 'lodash';\n\ndeclare global {\n\tinterface Window {\n\t\tdataLayer: any;\n\t\trequestAnimFrame: any;\n\t\tonload: any;\n\t\tparticles: any;\n\t\tcanvasZoom: any;\n\t}\n}\ninterface Options {\n\tchars: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n\tscreenMode: string;\n}\n\nexport const createCanvas = (self: any, options: Options) => {\n\tlet canvas: any;\n\tlet context: any;\n\tlet loopLogic: any;\n\tconst particlesNumber = 512;\n\tconst particles: any = [];\n\tconst text: any = [];\n\tlet nextText = [];\n\tconst shape: any = {};\n\tlet mouse = {\n\t\tx: -99999,\n\t\ty: -99999,\n\t};\n\tlet currentTransition = options?.mode || 'random';\n\tlet left: any; let right: any;\n\tlet layout = 0;\n\t// const type = ['random', 'uniform', 'drop', 'ribbon'];\n\tconst type = ['random', 'uniform', 'pattern'];\n\tconst FPS = 660;\n\twindow.particles = particles;\n\t/*\n\t* List colors.\n\t*/\n\n\tconst colors = {\n\t\trandom: ['#FFF', '#FFF'],\n\t\tuniform: ['#FFF', '#FFF'],\n\t\tdrop: ['#1d75cf', '#3a5945'],\n\t\tribbon: ['#702744', '#f98d00'],\n\t};\n\n\t/*\n\t * Init.\n\t */\n\n\tfunction init() {\n\t\twindow.removeEventListener('initCanvas', init, false);\n\t\tconst slideshowContainer = document.querySelector('.ip-slideshow');\n\t\tconst existingCanvas = document.querySelector('canvas');\n\n\t\tif (existingCanvas) {\n\t\t\tslideshowContainer?.removeChild(existingCanvas);\n\t\t\tcanvas = null;\n\t\t}\n\n\t\tcanvas = document.createElement('canvas');\n\n\t\tonResize();\n\n\t\tslideshowContainer?.appendChild(canvas);\n\n\t\t// Browser supports canvas?\n\t\tif (capable()) {\n\t\t\tcontext = canvas.getContext('2d');\n\n\t\t\t// Events\n\t\t\tif ('ontouchmove' in window) {\n\t\t\t\tcanvas.addEventListener('touchup', onTouchUp, false);\n\t\t\t\tcanvas.addEventListener('touchmove', onTouchMove, false);\n\t\t\t} else {\n\t\t\t\tcanvas.addEventListener('mousemove', onMouseMove, false);\n\t\t\t\tcanvas.addEventListener('mouseout', onMouseOut, false);\n\t\t\t}\n\n\t\t\t// Arrows\n\t\t\thandleClick('bind', 'left');\n\t\t\thandleClick('bind', 'right');\n\n\t\t\twindow.onresize = onResize;\n\n\t\t\tcreateParticles();\n\n\t\t\t// Arrows elements\n\t\t\tleft = document.querySelector('.ip-nav-left');\n\t\t\tright = document.querySelector('.ip-nav-right');\n\n\t\t\t// Show right arrow\n\t\t\tright?.classList.add('ip-nav-show');\n\t\t} else {\n\t\t\tconsole.error('Sorry, switch to a better browser to see this experiment.');\n\t\t}\n\t}\n\n\t/*\n\t * Checks if browser supports canvas element.\n\t */\n\n\tfunction capable() {\n\t\treturn canvas.getContext && canvas.getContext('2d');\n\t}\n\n\t/*\n\t * On resize window event.\n\t */\n\n\tfunction onResize() {\n\t\tif (options?.screenMode === 'fullscreen') {\n\t\t\tcanvas.width = window.innerWidth * 4;\n\t\t\tcanvas.height = window.innerHeight * 4;\n\t\t} else if (options?.screenMode === 'halfscreen') {\n\t\t\tconst root = document.documentElement;\n\t\t\tconst sandElem = document.querySelector('.sandtable-board');\n\t\t\tif (sandElem) {\n\t\t\t\tcanvas.width = sandElem?.clientWidth * 4;\n\t\t\t\tcanvas.height = sandElem?.clientHeight * 4;\n\t\t\t\troot.style.setProperty('--sand-w', `${sandElem?.clientWidth}px`);\n\t\t\t\troot.style.setProperty('--sand-h', `${sandElem?.clientHeight}px`);\n\t\t\t}\n\t\t} else {\n\t\t\tcanvas.width = 1920;\n\t\t\tcanvas.height = 1440;\n\t\t}\n\t\tupdateTransition();\n\t}\n\n\tfunction scrollX() {\n\t\treturn window.pageXOffset || window.document.documentElement.scrollLeft;\n\t}\n\n\tfunction scrollY() {\n\t\treturn window.pageYOffset || window.document.documentElement.scrollTop;\n\t}\n\n\t/*\n\t * Mouse move event.\n\t */\n\n\tfunction onMouseMove(event: any) {\n\t\tevent.preventDefault();\n\t\tconst refScaler: any = document.querySelector('.react-transform-element');\n\t\tconst scale = refScaler ? (1 / (refScaler.getBoundingClientRect().width / refScaler.offsetWidth)) * 4 : 1;\n\t\tconst mousePosX = event.pageX;\n\t\tconst mousePosY = event.pageY;\n\t\tconst canvasLeft = scrollX() + canvas.getBoundingClientRect().left;\n\t\tconst canvasTop = scrollY() + canvas.getBoundingClientRect().top;\n\t\tmouse.x = (mousePosX - canvasLeft) * scale;\n\t\tmouse.y = (mousePosY - canvasTop) * scale;\n\t}\n\n\tconst resetMouse = () => {\n\t\t// Reset mouse position\n\t\tmouse = {\n\t\t\tx: -1000,\n\t\t\ty: -1000,\n\t\t};\n\t};\n\n\tconst onMouseOut = () => {\n\t\tresetMouse();\n\t};\n\n\t/*\n\t * Touch up event.\n\t */\n\n\tfunction onTouchUp(event: any) {\n\t\tevent.preventDefault();\n\t\tresetMouse();\n\t}\n\n\t/*\n\t * Touch move event.\n\t */\n\n\tfunction onTouchMove(event: any) {\n\t\tevent.preventDefault();\n\t\tmouse.x = event.touches[0].pageX - (scrollX() + canvas.getBoundingClientRect().left);\n\t\tmouse.y = event.touches[0].pageY - (scrollY() + canvas.getBoundingClientRect().top);\n\t}\n\n\t/*\n\t * Left click event.\n\t */\n\n\tfunction onLeftClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.max(0, --layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 0) {\n\t\t\tleft.classList.remove('ip-nav-show');\n\t\t\thandleClick('unbind', 'left');\n\t\t\treturn;\n\t\t}\n\n\t\tif (layout === type.length - 1) {\n\t\t\tright.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Right click event.\n\t */\n\n\tfunction onRightClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.min(type.length, ++layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 1) {\n\t\t\tleft?.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'left');\n\t\t}\n\t\tif (layout === type.length - 1) {\n\t\t\tif (right?.classList.contains('ip-nav-show')) {\n\t\t\t\tright?.classList.remove('ip-nav-show');\n\t\t\t}\n\t\t\thandleClick('unbind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Handle click events for arrows.\n\t */\n\n\tfunction handleClick(action: any, tarType: any) {\n\t\tconst direction = tarType === 'left' ? onLeftClick : onRightClick;\n\n\t\tswitch (action) {\n\t\t\tcase 'bind':\n\t\t\t\tconst targetBind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetBind) {\n\t\t\t\t\ttargetBind.addEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetBind.addEventListener('click', direction, false);\n\t\t\t\t\ttargetBind.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'unbind':\n\t\t\t\tconst targetUnbind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetUnbind) {\n\t\t\t\t\ttargetUnbind.removeEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetUnbind.removeEventListener('click', direction, false);\n\t\t\t\t\ttargetUnbind.style.cursor = 'default';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Create particles.\n\t */\n\n\tfunction createParticles() {\n\t\tfor (let quantity = 0, len = particlesNumber; quantity < len; quantity++) {\n\t\t\tvar x; var y; var steps;\n\n\t\t\t// var steps = Math.PI * 2 * quantity / len;\n\n\t\t\t// x = canvas.width * 0.5 + 10 * Math.cos(steps);\n\t\t\t// y = 180 + 10 * Math.sin(steps);\n\n\t\t\tvar steps: any = quantity / len;\n\t\t\tvar initX = randomBetween(0, canvas.width);\n\t\t\tvar initY = randomBetween(0, canvas.height);\n\t\t\tx = initX;\n\t\t\ty = initY - randomBetween(0, canvas.height * 3);\n\n\t\t\tconst radius = randomBetween(0, 1);\n\t\t\tconst hasBorn = !(radius > 0 || radius < 12);\n\n\t\t\tconst color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\tparticles.push({\n\t\t\t\tfriction: 0,\n\n\t\t\t\tchar: randomChar(),\n\t\t\t\tinitX,\n\t\t\t\tinitY,\n\t\t\t\tx,\n\t\t\t\ty,\n\n\t\t\t\thasBorn,\n\n\t\t\t\tease: 0.04 + Math.random() * 0.06,\n\t\t\t\tbornSpeed: 0.07 + Math.random() * 0.07,\n\n\t\t\t\talpha: 0,\n\t\t\t\tmaxAlpha: 0.4 + Math.random() * 0.5,\n\n\t\t\t\tradius,\n\t\t\t\tmaxRadius: 3,\n\n\t\t\t\tcolor,\n\t\t\t\tinteractive: false,\n\n\t\t\t\tangle: 0,\n\n\t\t\t\tsteps,\n\t\t\t\tstepCount: quantity,\n\n\t\t\t});\n\t\t}\n\n\t\t// Go!\n\t\t// updateText();\n\t\tif (loopLogic) {\n\t\t\twindow.cancelAnimationFrame(loopLogic);\n\t\t}\n\t\tloop();\n\t}\n\n\t/*\n\t * Transitions handler.\n\t */\n\n\tfunction updateTransition() {\n\t\t/* --- Shapes ---- */\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tswitch (currentTransition) {\n\t\t\t\tcase 'random':\n\n\t\t\t\t\tshape.x = particle.initX;\n\t\t\t\t\tshape.y = particle.initY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'uniform':\n\t\t\t\tcase 'pattern':\n\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\tconst rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\tconst colUnit = canvas.height / uniformFactor;\n\n\t\t\t\t\tshape.x = rowCount * rowUnit;\n\t\t\t\t\tshape.y = colCount * colUnit;\n\n\t\t\t\t\t// var limit; var\n\t\t\t\t\t// \tsteps;\n\n\t\t\t\t\t// limit = (particles.length * 0.5) - 1;\n\t\t\t\t\t// steps = Math.PI * 2 * (index / limit);\n\n\t\t\t\t\t// // First oval\n\t\t\t\t\t// if (index < [].slice.call(particles, 0, limit).length) {\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 80 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 140 * Math.sin(steps);\n\t\t\t\t\t// } else {\n\t\t\t\t\t// \t// Second oval\n\t\t\t\t\t// \tlimit = (particles.length * 0.5);\n\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 140 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 80 * Math.sin(steps);\n\t\t\t\t\t// }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\tshape.x = canvas.width * 0.5 + 90 * (Math.sin(index)) * Math.cos(index);\n\t\t\t\t\tshape.y = 320 + 140 * (-Math.sin(index) - 1);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// speed\n\t\t\tconst speed = 0.08 * (1 - particle.friction);\n\t\t\tif (!particle.interactive) {\n\t\t\t\t// particle.x += ((shape.x + Math.cos(particle.angle) * 5) - particle.x) * speed;\n\t\t\t\t// particle.y += ((shape.y + Math.sin(particle.angle) * 5) - particle.y) * speed;\n\t\t\t\tconst targetDistX = shape.x - particle.x;\n\t\t\t\tconst targetDistY = shape.y - particle.y;\n\t\t\t\tif (!particle.initialized || options.particlesBackToOrigin) {\n\t\t\t\t\tparticle.x += targetDistX * speed;\n\t\t\t\t\tparticle.y += targetDistY * speed;\n\t\t\t\t\tparticle.angle += 0.0001;\n\t\t\t\t\tparticle.initialized = (targetDistX < 0.05 && targetDistY < 0.05);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// particle.x += ((mouse.x + Math.sin(particle.angle) * 120) - particle.x) * 0.08;\n\t\t\t\t// particle.y += ((mouse.y + Math.cos(particle.angle) * 120) - particle.y) * 0.08;\n\t\t\t\tparticle.x -= (mouse.x - particle.x) * speed;\n\t\t\t\tparticle.y -= (mouse.y - particle.y) * speed;\n\t\t\t\tparticle.angle += 0.08;\n\t\t\t}\n\n\t\t\t// particle.angle += 0.08;\n\t\t});\n\n\t\t// Remove extra particles\n\t\tif (nextText.length < text.length) {\n\t\t\tconst extra = [].slice.call(text, nextText.length, text.length);\n\n\t\t\t// Remove extra text particles\n\t\t\tfor (let index = 0; index < extra.length; index++) text.splice(index, 1);\n\t\t}\n\t}\n\n\t/*\n\t * Loop logic.\n\t */\n\n\tfunction loop() {\n\t\tclear();\n\t\tupdate();\n\t\trender();\n\n\t\tloopLogic = window.requestAnimFrame(loop);\n\t}\n\n\t/*\n\t * Clear the whole screen.\n\t */\n\n\tfunction clear() {\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t}\n\n\t/*\n\t * Update the particles.\n\t */\n\n\tfunction update() {\n\t\tupdateTransition();\n\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tparticle.alpha += (particle.maxAlpha - particle.alpha) * 0.05;\n\n\t\t\tif (particle.hasBorn) {\n\t\t\t\tparticle.radius += (0 - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === 0) {\n\t\t\t\t\t// Color transition\n\t\t\t\t\tswitch (currentTransition) {\n\t\t\t\t\t\tcase 'random':\n\n\t\t\t\t\t\t\tparticle.color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'uniform':\n\n\t\t\t\t\t\t\tparticle.color = colors.uniform[~~(Math.random() * colors.uniform.length)];\n\n\t\t\t\t\t\t\t// const rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\t\t\t// const colUnit = canvas.width / uniformFactor;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'pattern':\n\n\t\t\t\t\t\t\t// particle.color = colors.drop[~~(Math.random() * colors.drop.length)];\n\t\t\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\t\t\tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\t\t\tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\t\t\tconst circleDiameter = Math.floor(uniformFactor / 2);\n\t\t\t\t\t\t\tconst circleStart = Math.floor(uniformFactor * 0.35);\n\t\t\t\t\t\t\tconst circleEnd = Math.floor(uniformFactor * 0.85);\n\n\t\t\t\t\t\t\tif (colCount > circleStart) {\n\t\t\t\t\t\t\t\tconst colIndex = Math.abs(rowCount - circleDiameter);\n\t\t\t\t\t\t\t\tif ((colIndex * colIndex) / 4 > (circleEnd - colCount) * 4) {\n\t\t\t\t\t\t\t\t\tparticle.alpha = 0.1;\n\t\t\t\t\t\t\t\t\tparticle.maxAlpha = 0.1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\t\t\tparticle.color = colors.ribbon[~~(Math.random() * colors.ribbon.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparticle.hasBorn = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!particle.hasBorn) {\n\t\t\t\tparticle.radius += (particle.maxRadius - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === particle.maxRadius) particle.hasBorn = true;\n\t\t\t}\n\n\t\t\tconst pureMouseParticleDistance = distanceTo(mouse, particle) - particle.radius;\n\t\t\tconst maxInteractiveEdge = 240;\n\t\t\tconst minInteractiveEdge = 120;\n\n\t\t\tif (pureMouseParticleDistance <= maxInteractiveEdge) {\n\t\t\t\t// Have interaction\n\t\t\t\tparticle.interactive = true;\n\t\t\t\tparticle.friction = (pureMouseParticleDistance - minInteractiveEdge) / (maxInteractiveEdge - minInteractiveEdge);\n\t\t\t\tif (particle.friction > 0.8) {\n\t\t\t\t\tparticle.friction = 1;\n\t\t\t\t}\n\t\t\t\t// particle.friction = 0;\n\t\t\t} else {\n\t\t\t\t// No interaction\n\t\t\t\tparticle.interactive = false;\n\t\t\t\tparticle.friction = 0;\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t * Render the particles.\n\t */\n\n\tfunction render() {\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tcontext.save();\n\t\t\tcontext.globalAlpha = particle.alpha;\n\t\t\tcontext.fillStyle = particle.color;\n\t\t\tcontext.font = `${24}px Lato, Arial, sans-serif`;\n\t\t\tcontext.fillText(particle.char, particle.x, particle.y);\n\t\t\tcontext.beginPath();\n\t\t\t// context.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n\t\t\tcontext.fill();\n\t\t\tcontext.restore();\n\t\t});\n\t}\n\n\t/*\n\t * Distance between two points.\n\t */\n\n\tfunction distanceTo(pointA: any, pointB: any) {\n\t\tconst dx = Math.abs(pointA.x - pointB.x);\n\t\tconst dy = Math.abs(pointA.y - pointB.y);\n\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/*\n\t * Useful function for random integer between [min, max].\n\t */\n\n\tconst randomBetween = (min: any, max: any) => ~~(Math.random() * (max - min + 1) + min);\n\n\tconst randomChar = () => {\n\t\tconst chars = options.chars || ['字'];\n\t\treturn chars[Math.floor(Math.random() * chars.length)];\n\t};\n\n\t/*\n\t * Request new frame by Paul Irish.\n\t * 60 FPS.\n\t */\n\n\twindow.requestAnimFrame = (function () {\n\t\treturn window.requestAnimationFrame\n\t\t\t|| window.webkitRequestAnimationFrame\n\t\t\t|| window.mozRequestAnimationFrame\n\t\t\t|| window.oRequestAnimationFrame\n\t\t\t|| window.msRequestAnimationFrame\n\n\t\t\t|| function (callback) {\n\t\t\t\twindow.setTimeout(callback, 1000 / FPS);\n\t\t\t};\n\t}());\n\n\twindow.addEventListener('initCanvas', init, false);\n};\n\nexport const initCanvas = () => {\n\tconst someEv: any = document.createEvent('HTMLEvents');\n\tsomeEv.initEvent('initCanvas', true, true);\n\tsomeEv.eventName = 'initCanvas';\n\tdocument.dispatchEvent(someEv);\n};\n\nexport default createCanvas;\n","import React, { useEffect, useState } from 'react';\nimport Particles from 'react-particles-js';\nimport { createCanvas, initCanvas } from '../../helper/sandCanvas';\nimport './SandTest2.scss';\n\ninterface Props {\n\tchars?: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n\tfullscreen?: boolean;\n\tscreenMode?: string;\n}\n\nexport const SandTest2 = (\n\t{\n\t\tchars, particlesBackToOrigin, mode, fullscreen, screenMode = 'fullscreen',\n\t}: Props,\n) => {\n\t// Language\n\tconsole.log('SandTest2 rendered');\n\n\tuseEffect(() => {\n\t\tconst options: any = {\n\t\t\tchars,\n\t\t\tparticlesBackToOrigin,\n\t\t\tmode,\n\t\t\tscreenMode: fullscreen ? 'fullscreen' : screenMode,\n\t\t};\n\t\tcreateCanvas(window, options);\n\t\tinitCanvas();\n\t}, [chars, particlesBackToOrigin, mode, fullscreen, screenMode]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"sand-test-2\"\n\t\t>\n\t\t\t<div className=\"ip-slideshow-wrapper\">\n\t\t\t\t<div className=\"ip-slideshow\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest2;\n","import React, { useEffect, useState } from 'react';\nimport Particles from 'react-tsparticles';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport SandTest2 from '../SandTest2/SandTest2';\n\nimport './SandTest1.scss';\n\nconst sandMasks = [\n\t{\n\t\tlabel: 'No Mask',\n\t\turl: '',\n\t},\n\t{\n\t\tlabel: 'Deer',\n\t\turl: './img/test-deer.svg',\n\t},\n\t{\n\t\tlabel: 'Circle',\n\t\turl: './img/test-circle.svg',\n\t},\n\t{\n\t\tlabel: 'Sphere',\n\t\turl: './img/sphere-grid.svg',\n\t},\n\t{\n\t\tlabel: 'TEST',\n\t\turl: './img/test.svg',\n\t},\n];\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\n\nexport const SandTest1 = ({ title, children }: Props) => {\n\tconst [inputMsg, setInputMsg] = useState<string>('');\n\tconst [msgs, setMsgs] = useState<string[]>(['這不是', '真正的', '文案']);\n\tconst [mask, setMask] = useState<string>('');\n\tconst [particlesBackToOrigin, setParticlesBackToOrigin] = useState<boolean>(true);\n\tconst [mode, setMode] = useState<string>('random');\n\tconst [editTextMode, setEditTextMode] = useState<boolean>(false); // Edit Msg\n\tconst [editMsg, setEditMsg] = useState<string>('');\n\tconst [fullscreen, setFulScreen] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tsetEditMsg(msgs.join('___'));\n\t}, [msgs]);\n\n\t// Language\n\tconsole.log('SandTest1 rendered');\n\n\tconst addMsg = () => {\n\t\tsetMsgs([\n\t\t\t...msgs,\n\t\t\tinputMsg,\n\t\t]);\n\t\tsetInputMsg('');\n\t};\n\n\tconst saveEditedMsg = () => {\n\t\tconst editedMsg: string[] = editMsg.split('___');\n\t\tsetMsgs(editedMsg);\n\t\tsetEditTextMode(false);\n\t};\n\n\tconst cancelEditedMsg = () => {\n\t\t// setMsgs([\n\t\t// \t...msgs,\n\t\t// \tinputMsg,\n\t\t// ]);\n\t\t// setInputMsg('');\n\t\tsetEditMsg(msgs.join('___'));\n\t\tsetEditTextMode(false);\n\t};\n\n\n\tconst params: any = {\n\t\tfpsLimit: 120,\n\t\tbackground: {\n\t\t\tcolor: {\n\t\t\t\tvalue: '#323031',\n\t\t\t},\n\t\t\tposition: '50% 50%',\n\t\t\trepeat: 'no-repeat',\n\t\t\tsize: 'cover',\n\t\t},\n\t\tinteractivity: {\n\t\t\tevents: {\n\t\t\t\tonClick: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tmode: 'push',\n\t\t\t\t},\n\t\t\t\tonHover: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tmode: 'repulse',\n\t\t\t\t\tparallax: {\n\t\t\t\t\t\tforce: 60,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmodes: {\n\t\t\t\trepulse: {\n\t\t\t\t\tdistance: 120,\n\t\t\t\t\tduration: 3,\n\t\t\t\t},\n\t\t\t\tgrab: {\n\t\t\t\t\tdistance: 50,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tparticles: {\n\t\t\tcolor: {\n\t\t\t\tvalue: '#ffffff',\n\t\t\t},\n\t\t\tcollisions: {\n\t\t\t\tenable: true,\n\t\t\t},\n\t\t\t// move: {\n\t\t\t// \tattract: {\n\t\t\t// \t\t// rotate: {\n\t\t\t// \t\t// \tx: 600,\n\t\t\t// \t\t// \ty: 1200,\n\t\t\t// \t\t// },\n\t\t\t// \t},\n\t\t\t// \tenable: true,\n\t\t\t// \toutModes: {\n\t\t\t// \t\tdefault: 'bounce',\n\t\t\t// \t\tbottom: 'bounce',\n\t\t\t// \t\tleft: 'bounce',\n\t\t\t// \t\tright: 'bounce',\n\t\t\t// \t\ttop: 'bounce',\n\t\t\t// \t},\n\t\t\t// \tspeed: 10,\n\t\t\t// },\n\t\t\tnumber: {\n\t\t\t\tdensity: {\n\t\t\t\t\tenable: true,\n\t\t\t\t},\n\t\t\t\tarrangement: 'equidistant',\n\t\t\t\tvalue: 600,\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tanimation: {\n\t\t\t\t\tspeed: 1,\n\t\t\t\t\tminimumValue: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t\tshape: {\n\t\t\t\toptions: {\n\t\t\t\t\tchar: {\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tfont: 'Roboto',\n\t\t\t\t\t\tstyle: '',\n\t\t\t\t\t\tvalue: (msgs.length > 0) ? msgs : ['字'],\n\t\t\t\t\t\tweight: '400',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttype: 'char',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 10,\n\t\t\t\tanimation: {\n\t\t\t\t\tspeed: 40,\n\t\t\t\t\tminimumValue: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tpolygon: {\n\t\t\t// draw: {\n\t\t\t// \tenable: !!mask,\n\t\t\t// \tstroke: {\n\t\t\t// \t\tcolor: {\n\t\t\t// \t\t\tvalue: 'rgba(255,255,255,0.2)',\n\t\t\t// \t\t},\n\t\t\t// \t\twidth: 0.5,\n\t\t\t// \t\topacity: 0.2,\n\t\t\t// \t},\n\t\t\t// },\n\t\t\tenable: !!mask,\n\t\t\tinline: {\n\t\t\t\tarrangement: '',\n\t\t\t},\n\t\t\tmove: {\n\t\t\t\tradius: 10,\n\t\t\t\ttype: 'path',\n\t\t\t},\n\t\t\tscale: 1.5,\n\t\t\ttype: 'inline',\n\t\t\turl: mask,\n\t\t},\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`sand-test ${fullscreen ? 'is-fullscreen' : ''}`}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"sand-test__body\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sand-test__board\"\n\t\t\t\t>\n\t\t\t\t\t<h2>SAND TABLE TEST 1</h2>\n\t\t\t\t\t<div className=\"sand-board\">\n\t\t\t\t\t\t<TransformWrapper\n\t\t\t\t\t\t\tdefaultScale={1}\n\t\t\t\t\t\t\t// defaultPositionX={-960}\n\t\t\t\t\t\t\t// defaultPositionY={450}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tminScale: 1,\n\t\t\t\t\t\t\t\tmaxScale: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tzoomIn, zoomOut, resetTransform, ...rest\n\t\t\t\t\t\t\t}: any) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TransformComponent>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"sand-board__zoomer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"sand-board__body\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Particles\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"1920px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"1440px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tparams={params}\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<SandTest2\n\t\t\t\t\t\t\t\t\t\t\t\t\tchars={msgs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticlesBackToOrigin={particlesBackToOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullscreen={fullscreen}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</TransformComponent>\n\t\t\t\t\t\t\t\t\t<div className=\"tools\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Fullscreen\" className=\"fullscreen-btn\" onClick={() => setFulScreen(!fullscreen)}>[ ]</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Reset Zoom\" onClick={resetTransform}>x</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TransformWrapper>\n\t\t\t\t\t</div>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<span className=\"ip-nav-left\" />\n\t\t\t\t\t\t<span className=\"ip-nav-right\" />\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sand-test__control\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sand-msg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h3>Messages</h3>\n\t\t\t\t\t\t{editTextMode ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"sand-msg-editpanel\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tclassName=\"sand-msg-textarea\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => setEditMsg(e.target.value)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{editMsg}\n\t\t\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-button\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => saveEditedMsg()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-button\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => cancelEditedMsg()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{`${msgs.join('___')}...`}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-button\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditTextMode(true)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"sand-msg-input\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={inputMsg}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Leave your msg\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setInputMsg(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => addMsg()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sand-options\">\n\t\t\t\t\t\t<h3>Options</h3>\n\t\t\t\t\t\t<div className=\"sand-option-group\">\n\t\t\t\t\t\t\t<h4 className=\"sand-option-label\">Particles move back?</h4>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setParticlesBackToOrigin((e.target.value === 'Y'))}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"Y\">Yes</option>\n\t\t\t\t\t\t\t\t<option value=\"N\">No</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sand-option-group\">\n\t\t\t\t\t\t\t<h4 className=\"sand-option-label\">Particles Arrangement</h4>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setMode(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"random\">Random</option>\n\t\t\t\t\t\t\t\t{/* <option value=\"uniform\">Uniform</option> */}\n\t\t\t\t\t\t\t\t<option value=\"pattern\">Pattern</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className=\"sand-mask\">\n\t\t\t\t\t\t<h3>Mask</h3>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tonChange={(e) => setMask(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsandMasks.map((item: any, index: number) => {\n\t\t\t\t\t\t\t\t\tconst key = `mask-${index}`;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest1;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\t// useParams,\n\tuseHistory,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './DemoLayout.scss';\n\nimport SandTest1 from '../../components/SandTest1/SandTest1';\n\nexport const DemoLayout = () => {\n\t// const { lang: paramLang } = useParams();\n\tconst { t } = useTranslation();\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"demo-layout\">\n\t\t\t\t<div className=\"demo-layout__body\">\n\t\t\t\t\t<h1 className=\"a11y-hidden\">Sand Table</h1>\n\t\t\t\t\t<main className=\"demo-layout__content\">\n\t\t\t\t\t\t<SandTest1 />\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\n\nexport default DemoLayout;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport SandTest2 from '../SandTest2/SandTest2';\n\nimport './SandTable.scss';\n\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\n\nexport const SandTable = ({ title, children }: Props) => {\n\tconst [inputMsg, setInputMsg] = useState<string>('');\n\tconst [msgs, setMsgs] = useState<string[]>(['這不是', '真正的', '文案']);\n\tconst [particlesBackToOrigin, setParticlesBackToOrigin] = useState<boolean>(true); // Hidden options\n\tconst [mode, setMode] = useState<string>('pattern');\n\tconst [editTextMode, setEditTextMode] = useState<boolean>(false); // Edit Msg\n\tconst [editMsg, setEditMsg] = useState<string>('');\n\tconst [screenMode, setScreenMode] = useState<string>('halfscreen');\n\tconst [aboutOpen, setAboutOpen] = useState<boolean>(false); // Edit Msg\n\tconst [zoomValue, setZoomValue] = useState<number>(0);\n\n\tuseEffect(() => {\n\t\tsetEditMsg(msgs.join('___'));\n\t}, [msgs]);\n\n\t// Language\n\tconsole.log('SandTable rendered');\n\n\tconst toggleFullscreen = () => {\n\t\tconst targetMode = screenMode === 'halfscreen' ? 'fullscreen' : 'halfscreen';\n\t\tsetScreenMode(targetMode);\n\t};\n\n\tconst addMsg = () => {\n\t\tsetMsgs([\n\t\t\t...msgs,\n\t\t\tinputMsg,\n\t\t]);\n\t\tsetInputMsg('');\n\t};\n\n\tconst saveEditedMsg = () => {\n\t\tconst editedMsg: string[] = editMsg.split('___');\n\t\tsetMsgs(editedMsg);\n\t\tsetEditTextMode(false);\n\t};\n\n\tconst cancelEditedMsg = () => {\n\t\t// setMsgs([\n\t\t// \t...msgs,\n\t\t// \tinputMsg,\n\t\t// ]);\n\t\t// setInputMsg('');\n\t\tsetEditMsg(msgs.join('___'));\n\t\tsetEditTextMode(false);\n\t};\n\n\tconst updateZoom = (val: number) => {\n\t\tsetZoomValue(val);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`sandtable is-${screenMode}`}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"sandtable__body\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sandtable__board\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sandtable__head\">\n\t\t\t\t\t\t<img className=\"sandtable__logo-en\" src=\"/img/img-sandtable-title.svg\" alt=\"\" />\n\t\t\t\t\t\t<img className=\"sandtable__logo-zh\" src=\"/img/img-sandtable-title-zh.svg\" alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sandtable-board\">\n\t\t\t\t\t\t<TransformWrapper\n\t\t\t\t\t\t\tdefaultScale={1}\n\t\t\t\t\t\t\t// defaultPositionX={-960}\n\t\t\t\t\t\t\t// defaultPositionY={450}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tminScale: 1,\n\t\t\t\t\t\t\t\tmaxScale: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonZoomChange={(value: any) => {\n\t\t\t\t\t\t\t\twindow.canvasZoom = ((value.scale - 1) / 3) * 100;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tzoomIn, zoomOut, resetTransform, setScale, ...rest\n\t\t\t\t\t\t\t}: any) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TransformComponent>\n\t\t\t\t\t\t\t\t\t\t<div className=\"sandtable-board__zoomer\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sandtable-board__body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SandTest2\n\t\t\t\t\t\t\t\t\t\t\t\t\tchars={msgs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticlesBackToOrigin={particlesBackToOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\t\t\t\tscreenMode={screenMode}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</TransformComponent>\n\t\t\t\t\t\t\t\t\t<div className=\"tools-slider\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"tools-slider__wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t<ReactSlider\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"tools-slider__body\"\n\t\t\t\t\t\t\t\t\t\t\t\tthumbClassName=\"tools-slider__thumb\"\n\t\t\t\t\t\t\t\t\t\t\t\ttrackClassName=\"tools-slider__track\"\n\t\t\t\t\t\t\t\t\t\t\t\trenderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={window?.canvasZoom || 0}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={window?.canvasZoom || 0}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst scale = 1 + 3 * (val / 100);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetScale(scale);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button className=\"tools-slider__zoom-out\" type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t<button className=\"tools-slider__zoom-in\" type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t\t\t\t<div className=\"tools\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Fullscreen\" className=\"fullscreen-btn\" onClick={() => toggleFullscreen()}>[ ]</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Reset Zoom\" onClick={resetTransform}>x</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TransformWrapper>\n\t\t\t\t\t</div>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<span className=\"ip-nav-left\" />\n\t\t\t\t\t\t<span className=\"ip-nav-right\" />\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sandtable__control\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sandtable__sidebar\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => setAboutOpen(!aboutOpen)}\n\t\t\t\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSupport\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFollow Us\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sandtable__head\">\n\t\t\t\t\t\t<div />\n\t\t\t\t\t\t<div className=\"sandtable__sitetitle\">\n\t\t\t\t\t\t\t<span>Write Together 一起書寫</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sandtable-interact-panel\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"sandtable-msg\">\n\t\t\t\t\t\t\t<div className=\"sandtable-msg__title\">\n\t\t\t\t\t\t\t\t一起書寫香港之書 Let’s continue the story of Hong Kong\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"sandtable-msg__msgs\"\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: `<em>致香港 To Hong Kong</em> <span></span> ${msgs.join(' <span></span> ')}...` }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"sandtable-msg-input\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={inputMsg}\n\t\t\t\t\t\t\t\t\tplaceholder=\"一起書寫 Write Together \"\n\t\t\t\t\t\t\t\t\tonChange={(e) => setInputMsg(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={() => addMsg()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`sandtable-about ${aboutOpen ? 'is-active' : ''}`}>\n\t\t\t\t\t\t\t<div className=\"sandtable-scrollpane\">\n\t\t\t\t\t\t\t\t<h3 className=\"sandtable-about__title\">關於 About</h3>\n\t\t\t\t\t\t\t\t<div className=\"sandtable-about__desc\">\n\t\t\t\t\t\t\t\t\t<p>Hong Kong is a nexus and a vessel for resonance between multiple cultures: if captured in words, it would be a co-authored, dynamic book of interactions, transcending time, and cultural differences.</p>\n\t\t\t\t\t\t\t\t\t<p>Visitors are invited to develop stories, dreams, and speculations on the histories and futures of Hong Kong as they encounter the urban legend of Ah Kwan Showing the Way, a fantasy concocted by early British colonialists. Combined with the materiality and notion of fortune-telling rituals, the audience will play a game of Chinese Whispers with this local legend as the basis, each day regenerating the past and producing a ‘fortune’ for the future.</p>\n\t\t\t\t\t\t\t\t\t<p>Captured in sand, visitors’ written strokes will be projected in the mirroring sites and recorded over the duration of the exhibition to collate an archive of resonance on- site and online. The pavilion, therefore, presents an alternative archive, documenting the multiple, interwoven, non-linear histories of Hong Kong, and encouraging collective speculation beyond the rhetorical narratives of the city’s future.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTable;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\t// useParams,\n\tuseHistory,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './MainLayout.scss';\nimport Header from '../Header/Header';\nimport SideBar from '../SideBar/SideBar';\n\nimport SandTable from '../../components/SandTable/SandTable';\n\nexport const MainLayout = () => {\n\t// const { lang: paramLang } = useParams();\n\tconst { t } = useTranslation();\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"main-layout\">\n\t\t\t\t<h1 className=\"a11y-hidden\">Sand Table</h1>\n\t\t\t\t<main className=\"main-layout__body\">\n\t\t\t\t\t<SandTable />\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\n\nexport default MainLayout;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from 'react-router-dom';\nimport DemoLayout from '../layout/DemoLayout/DemoLayout';\nimport MainLayout from '../layout/MainLayout/MainLayout';\n\nexport default () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/:lang?/demo\" component={DemoLayout} />\n\t\t\t<Route exact path=\"/:lang?\" component={MainLayout} />\n\t\t</Switch>\n\t</Router>\n);\n","\nimport React, { useEffect } from 'react';\nimport MainRouter from './router';\n\nconst App: React.FC = () => {\n\t// const { lang: paramLang } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<MainRouter />\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}