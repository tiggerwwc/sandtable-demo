{"version":3,"sources":["helper/sandCanvas.ts","components/SandTest2/SandTest2.tsx","components/SandTest1/SandTest1.tsx","layout/DemoLayout/DemoLayout.tsx","components/LoaderDots/LoaderDots.tsx","components/SandTable/SandTable.tsx","layout/MainLayout/MainLayout.tsx","components/PatternCreater/PatternCreater.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createCanvas","self","options","canvas","context","loopLogic","left","right","particlesNumber","mode","particles","text","nextText","shape","mouse","x","y","currentTransition","layout","type","window","colors","random","uniform","drop","ribbon","onResize","screenMode","width","innerWidth","height","innerHeight","root","document","documentElement","sandElem","querySelector","clientWidth","clientHeight","style","setProperty","updateTransition","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","onMouseMove","event","preventDefault","refScaler","scale","getBoundingClientRect","offsetWidth","mousePosX","pageX","mousePosY","pageY","canvasLeft","canvasTop","top","resetMouse","onMouseOut","onTouchUp","onTouchMove","touches","onLeftClick","Math","max","classList","remove","handleClick","length","add","onRightClick","min","contains","action","tarType","direction","targetBind","addEventListener","cursor","targetUnbind","removeEventListener","forEach","call","particle","index","initX","initY","uniformFactor","floor","sqrt","rowCount","stepCount","colCount","rowUnit","colUnit","sin","cos","speed","friction","interactive","angle","targetDistX","targetDistY","initialized","particlesBackToOrigin","extra","slice","splice","loop","clearRect","alpha","maxAlpha","hasBorn","radius","bornSpeed","round","color","char","maxRadius","pureMouseParticleDistance","pointA","pointB","dx","abs","dy","distanceTo","save","globalAlpha","fillStyle","font","fillText","beginPath","fill","restore","requestAnimFrame","randomBetween","randomChar","basicChars","Array","prototype","map","eachLetter","randomChars","chars","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","init","slideshowContainer","existingCanvas","removeChild","createElement","appendChild","getContext","onresize","quantity","len","adjIndex","ceil","steps","textIndex","patternIndex","push","ease","cancelAnimationFrame","createParticles","console","error","SandTest2","fullscreen","useEffect","formattedChars","_","reverse","join","someEv","createEvent","initEvent","eventName","dispatchEvent","initCanvas","className","SandTest1","title","children","useState","inputMsg","setInputMsg","msgs","setMsgs","setParticlesBackToOrigin","setMode","editTextMode","setEditTextMode","editMsg","setEditMsg","setFulScreen","log","defaultScale","minScale","maxScale","zoomIn","zoomOut","resetTransform","onClick","onChange","e","target","value","editedMsg","split","saveEditedMsg","placeholder","DemoLayout","useTranslation","t","useHistory","LoaderDots","show","SandTable","aboutOpen","setAboutOpen","isTyping","setIsTyping","Event","toAbout","key","scroller","scrollTo","duration","delay","smooth","offset","SandTableSidebar","href","rel","src","PUBLIC_URL","alt","onZoomChange","canvasZoom","setScale","ReactSlider","thumbClassName","trackClassName","renderThumb","props","state","valueNow","defaultValue","val","dangerouslySetInnerHTML","__html","onFocus","onBlur","name","MainLayout","PatternCreater","canvasSize","onPoints","setOnPoints","savedPoints","localStorage","getItem","optionsArr","Number","item","newPoints","setItem","togglePoint","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed1397ba.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-undef */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-expressions */\nimport _ from 'lodash';\n\ndeclare global {\n\tinterface Window {\n\t\tPUBLIC_URL: any;\n\t\tdataLayer: any;\n\t\trequestAnimFrame: any;\n\t\tonload: any;\n\t\tparticles: any;\n\t\tcanvasZoom: any;\n\t}\n}\ninterface Options {\n\tchars: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n\tscreenMode: string;\n}\n\nexport const createCanvas = (self: any, options: Options) => {\n\tlet canvas: any;\n\tlet context: any;\n\tlet loopLogic: any;\n\tconst particlesNumber = (options.mode === 'pattern') ? 1089 : 625;\n\tconst particles: any = [];\n\tconst text: any = [];\n\tlet nextText = [];\n\tconst shape: any = {};\n\tlet mouse = {\n\t\tx: -99999,\n\t\ty: -99999,\n\t};\n\tlet currentTransition = options?.mode || 'random';\n\tlet left: any; let right: any;\n\tlet layout = 0;\n\t// const type = ['random', 'uniform', 'drop', 'ribbon'];\n\tconst type = ['random', 'uniform', 'pattern'];\n\tconst FPS = 660;\n\twindow.particles = particles;\n\t/*\n\t* List colors.\n\t*/\n\n\tconst colors = {\n\t\trandom: ['#FFF', '#FFF'],\n\t\tuniform: ['#FFF', '#FFF'],\n\t\tdrop: ['#1d75cf', '#3a5945'],\n\t\tribbon: ['#702744', '#f98d00'],\n\t};\n\n\t/*\n\t * Init.\n\t */\n\n\tfunction init() {\n\t\twindow.removeEventListener('initCanvas', init, false);\n\t\tconst slideshowContainer = document.querySelector('.ip-slideshow');\n\t\tconst existingCanvas = document.querySelector('canvas');\n\n\t\tif (existingCanvas) {\n\t\t\tslideshowContainer?.removeChild(existingCanvas);\n\t\t\tcanvas = null;\n\t\t}\n\n\t\tcanvas = document.createElement('canvas');\n\n\t\tonResize();\n\n\t\tslideshowContainer?.appendChild(canvas);\n\n\t\t// Browser supports canvas?\n\t\tif (capable()) {\n\t\t\tcontext = canvas.getContext('2d');\n\n\t\t\t// Events\n\t\t\tif ('ontouchmove' in window) {\n\t\t\t\tcanvas.addEventListener('touchup', onTouchUp, false);\n\t\t\t\tcanvas.addEventListener('touchmove', onTouchMove, false);\n\t\t\t} else {\n\t\t\t\tcanvas.addEventListener('mousemove', onMouseMove, false);\n\t\t\t\tcanvas.addEventListener('mouseout', onMouseOut, false);\n\t\t\t}\n\n\t\t\t// Arrows\n\t\t\thandleClick('bind', 'left');\n\t\t\thandleClick('bind', 'right');\n\n\t\t\twindow.onresize = onResize;\n\n\t\t\tcreateParticles();\n\n\t\t\t// Arrows elements\n\t\t\tleft = document.querySelector('.ip-nav-left');\n\t\t\tright = document.querySelector('.ip-nav-right');\n\n\t\t\t// Show right arrow\n\t\t\tright?.classList.add('ip-nav-show');\n\t\t} else {\n\t\t\tconsole.error('Sorry, switch to a better browser to see this experiment.');\n\t\t}\n\t}\n\n\t/*\n\t * Checks if browser supports canvas element.\n\t */\n\n\tfunction capable() {\n\t\treturn canvas.getContext && canvas.getContext('2d');\n\t}\n\n\t/*\n\t * On resize window event.\n\t */\n\n\tfunction onResize() {\n\t\tif (options?.screenMode === 'fullscreen') {\n\t\t\tcanvas.width = window.innerWidth * 4;\n\t\t\tcanvas.height = window.innerHeight * 4;\n\t\t} else if (options?.screenMode === 'halfscreen') {\n\t\t\tconst root = document.documentElement;\n\t\t\tconst sandElem = document.querySelector('.sandtable-board');\n\t\t\tif (sandElem) {\n\t\t\t\tcanvas.width = sandElem?.clientWidth * 4;\n\t\t\t\tcanvas.height = sandElem?.clientHeight * 4;\n\t\t\t\troot.style.setProperty('--sand-w', `${sandElem?.clientWidth}px`);\n\t\t\t\troot.style.setProperty('--sand-h', `${sandElem?.clientHeight}px`);\n\t\t\t}\n\t\t} else {\n\t\t\tcanvas.width = 1920;\n\t\t\tcanvas.height = 1440;\n\t\t}\n\t\tupdateTransition();\n\t}\n\n\tfunction scrollX() {\n\t\treturn window.pageXOffset || window.document.documentElement.scrollLeft;\n\t}\n\n\tfunction scrollY() {\n\t\treturn window.pageYOffset || window.document.documentElement.scrollTop;\n\t}\n\n\t/*\n\t * Mouse move event.\n\t */\n\n\tfunction onMouseMove(event: any) {\n\t\tevent.preventDefault();\n\t\tconst refScaler: any = document.querySelector('.react-transform-element');\n\t\tconst scale = refScaler ? (1 / (refScaler.getBoundingClientRect().width / refScaler.offsetWidth)) * 4 : 1;\n\t\tconst mousePosX = event.pageX;\n\t\tconst mousePosY = event.pageY;\n\t\tconst canvasLeft = scrollX() + canvas.getBoundingClientRect().left;\n\t\tconst canvasTop = scrollY() + canvas.getBoundingClientRect().top;\n\t\tmouse.x = (mousePosX - canvasLeft) * scale;\n\t\tmouse.y = (mousePosY - canvasTop) * scale;\n\t}\n\n\tconst resetMouse = () => {\n\t\t// Reset mouse position\n\t\tmouse = {\n\t\t\tx: -1000,\n\t\t\ty: -1000,\n\t\t};\n\t};\n\n\tconst onMouseOut = () => {\n\t\tresetMouse();\n\t};\n\n\t/*\n\t * Touch up event.\n\t */\n\n\tfunction onTouchUp(event: any) {\n\t\tevent.preventDefault();\n\t\tresetMouse();\n\t}\n\n\t/*\n\t * Touch move event.\n\t */\n\n\tfunction onTouchMove(event: any) {\n\t\tevent.preventDefault();\n\t\tmouse.x = event.touches[0].pageX - (scrollX() + canvas.getBoundingClientRect().left);\n\t\tmouse.y = event.touches[0].pageY - (scrollY() + canvas.getBoundingClientRect().top);\n\t}\n\n\t/*\n\t * Left click event.\n\t */\n\n\tfunction onLeftClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.max(0, --layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 0) {\n\t\t\tleft.classList.remove('ip-nav-show');\n\t\t\thandleClick('unbind', 'left');\n\t\t\treturn;\n\t\t}\n\n\t\tif (layout === type.length - 1) {\n\t\t\tright.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Right click event.\n\t */\n\n\tfunction onRightClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.min(type.length, ++layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 1) {\n\t\t\tleft?.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'left');\n\t\t}\n\t\tif (layout === type.length - 1) {\n\t\t\tif (right?.classList.contains('ip-nav-show')) {\n\t\t\t\tright?.classList.remove('ip-nav-show');\n\t\t\t}\n\t\t\thandleClick('unbind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Handle click events for arrows.\n\t */\n\n\tfunction handleClick(action: any, tarType: any) {\n\t\tconst direction = tarType === 'left' ? onLeftClick : onRightClick;\n\n\t\tswitch (action) {\n\t\t\tcase 'bind':\n\t\t\t\tconst targetBind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetBind) {\n\t\t\t\t\ttargetBind.addEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetBind.addEventListener('click', direction, false);\n\t\t\t\t\ttargetBind.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'unbind':\n\t\t\t\tconst targetUnbind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetUnbind) {\n\t\t\t\t\ttargetUnbind.removeEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetUnbind.removeEventListener('click', direction, false);\n\t\t\t\t\ttargetUnbind.style.cursor = 'default';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Create particles.\n\t */\n\n\tfunction createParticles() {\n\t\tfor (let quantity = 0, len = particlesNumber; quantity < len; quantity++) {\n\t\t\tvar x; var y; var steps;\n\n\t\t\t// var steps = Math.PI * 2 * quantity / len;\n\n\t\t\t// x = canvas.width * 0.5 + 10 * Math.cos(steps);\n\t\t\t// y = 180 + 10 * Math.sin(steps);\n\t\t\tconst stepCount = quantity;\n\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber)); // = row and col number\n\n\t\t\tconst adjIndex = stepCount + 1;\n\t\t\tconst colCount = Math.ceil(adjIndex / uniformFactor);\n\t\t\tconst rowCount = (adjIndex % uniformFactor === 0) ? uniformFactor : adjIndex % uniformFactor;\n\n\t\t\t// console.log('uniformFactor', uniformFactor);\n\t\t\t// console.log('rowCount', rowCount);\n\t\t\t// console.log('colCount', colCount);\n\n\t\t\tvar steps: any = stepCount / len;\n\t\t\tconst textIndex = rowCount + (uniformFactor * (uniformFactor - colCount));\n\t\t\tconst patternIndex = colCount + (uniformFactor * (rowCount - 1));\n\n\t\t\tvar initX = randomBetween(0, canvas.width);\n\t\t\tvar initY = randomBetween(0, canvas.height);\n\t\t\tx = Math.floor(canvas.width / 2);\n\t\t\ty = initY - randomBetween(0, canvas.height * 3);\n\n\t\t\tconst radius = randomBetween(0, 1);\n\t\t\tconst hasBorn = !(radius > 0 || radius < 12);\n\n\t\t\tconst color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\tparticles.push({\n\t\t\t\tfriction: 0,\n\n\t\t\t\t// char: randomChar(),\n\t\t\t\tchar: randomChar(options.mode === 'pattern' ? patternIndex : textIndex),\n\t\t\t\tinitX,\n\t\t\t\tinitY,\n\t\t\t\tx,\n\t\t\t\ty,\n\n\t\t\t\thasBorn,\n\n\t\t\t\tease: 0.04 + Math.random() * 0.06,\n\t\t\t\tbornSpeed: 0.07 + Math.random() * 0.07,\n\n\t\t\t\talpha: 0,\n\t\t\t\tmaxAlpha: 0.4 + Math.random() * 0.5,\n\n\t\t\t\tradius,\n\t\t\t\tmaxRadius: 3,\n\n\t\t\t\tcolor,\n\t\t\t\tinteractive: false,\n\n\t\t\t\tangle: 0,\n\n\t\t\t\tsteps,\n\t\t\t\tstepCount,\n\t\t\t\ttextIndex,\n\n\t\t\t});\n\t\t}\n\n\t\t// Go!\n\t\t// updateText();\n\t\tif (loopLogic) {\n\t\t\twindow.cancelAnimationFrame(loopLogic);\n\t\t}\n\t\tloop();\n\t}\n\n\t/*\n\t * Transitions handler.\n\t */\n\n\tfunction updateTransition() {\n\t\t/* --- Shapes ---- */\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tswitch (currentTransition) {\n\t\t\t\tcase 'random':\n\n\t\t\t\t\tshape.x = particle.initX;\n\t\t\t\t\tshape.y = particle.initY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'uniform':\n\t\t\t\tcase 'pattern':\n\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\tconst rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\tconst colUnit = canvas.height / uniformFactor;\n\n\t\t\t\t\tshape.x = rowCount * rowUnit;\n\t\t\t\t\tshape.y = 40 + colCount * colUnit;\n\n\t\t\t\t\t// var limit; var\n\t\t\t\t\t// \tsteps;\n\n\t\t\t\t\t// limit = (particles.length * 0.5) - 1;\n\t\t\t\t\t// steps = Math.PI * 2 * (index / limit);\n\n\t\t\t\t\t// // First oval\n\t\t\t\t\t// if (index < [].slice.call(particles, 0, limit).length) {\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 80 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 140 * Math.sin(steps);\n\t\t\t\t\t// } else {\n\t\t\t\t\t// \t// Second oval\n\t\t\t\t\t// \tlimit = (particles.length * 0.5);\n\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 140 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 80 * Math.sin(steps);\n\t\t\t\t\t// }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\tshape.x = canvas.width * 0.5 + 90 * (Math.sin(index)) * Math.cos(index);\n\t\t\t\t\tshape.y = 320 + 140 * (-Math.sin(index) - 1);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// speed\n\t\t\tconst speed = 0.08 * (1 - particle.friction);\n\t\t\tif (!particle.interactive) {\n\t\t\t\t// particle.x += ((shape.x + Math.cos(particle.angle) * 5) - particle.x) * speed;\n\t\t\t\t// particle.y += ((shape.y + Math.sin(particle.angle) * 5) - particle.y) * speed;\n\t\t\t\tconst targetDistX = shape.x - particle.x;\n\t\t\t\tconst targetDistY = shape.y - particle.y;\n\t\t\t\tif (!particle.initialized || options.particlesBackToOrigin) {\n\t\t\t\t\tparticle.x += targetDistX * speed;\n\t\t\t\t\tparticle.y += targetDistY * speed;\n\t\t\t\t\tparticle.angle += 0.0001;\n\t\t\t\t\tparticle.initialized = (targetDistX < 0.05 && targetDistY < 0.05);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// particle.x += ((mouse.x + Math.sin(particle.angle) * 120) - particle.x) * 0.08;\n\t\t\t\t// particle.y += ((mouse.y + Math.cos(particle.angle) * 120) - particle.y) * 0.08;\n\t\t\t\tparticle.x -= (mouse.x - particle.x) * speed;\n\t\t\t\tparticle.y -= (mouse.y - particle.y) * speed;\n\t\t\t\tparticle.angle += 0.08;\n\t\t\t}\n\n\t\t\t// particle.angle += 0.08;\n\t\t});\n\n\t\t// Remove extra particles\n\t\tif (nextText.length < text.length) {\n\t\t\tconst extra = [].slice.call(text, nextText.length, text.length);\n\n\t\t\t// Remove extra text particles\n\t\t\tfor (let index = 0; index < extra.length; index++) text.splice(index, 1);\n\t\t}\n\t}\n\n\t/*\n\t * Loop logic.\n\t */\n\n\tfunction loop() {\n\t\tclear();\n\t\tupdate();\n\t\trender();\n\n\t\tloopLogic = window.requestAnimFrame(loop);\n\t}\n\n\t/*\n\t * Clear the whole screen.\n\t */\n\n\tfunction clear() {\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t}\n\n\t/*\n\t * Update the particles.\n\t */\n\n\tfunction update() {\n\t\tupdateTransition();\n\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tparticle.alpha += (particle.maxAlpha - particle.alpha) * 0.05;\n\n\t\t\tif (particle.hasBorn) {\n\t\t\t\tparticle.radius += (0 - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === 0) {\n\t\t\t\t\t// Color transition\n\t\t\t\t\tswitch (currentTransition) {\n\t\t\t\t\t\tcase 'random':\n\n\t\t\t\t\t\t\tparticle.color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'uniform':\n\n\t\t\t\t\t\t\tparticle.color = colors.uniform[~~(Math.random() * colors.uniform.length)];\n\n\t\t\t\t\t\t\t// const rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\t\t\t// const colUnit = canvas.width / uniformFactor;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'pattern':\n\n\t\t\t\t\t\t\tparticle.color = colors.uniform[~~(Math.random() * colors.uniform.length)];\n\t\t\t\t\t\t\tif (particle.char === '｜') {\n\t\t\t\t\t\t\t\tparticle.alpha = 0.4;\n\t\t\t\t\t\t\t\tparticle.maxAlpha = 0.4;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparticle.alpha = 0.75;\n\t\t\t\t\t\t\t\tparticle.maxAlpha = 0.75;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// case 'pattern':\n\n\t\t\t\t\t\t\t// \t// particle.color = colors.drop[~~(Math.random() * colors.drop.length)];\n\t\t\t\t\t\t\t// \tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\t\t\t// \tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\t\t\t// \tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\t\t\t// \tconst circleDiameter = Math.floor(uniformFactor / 2);\n\t\t\t\t\t\t\t// \tconst circleStart = Math.floor(uniformFactor * 0.35);\n\t\t\t\t\t\t\t// \tconst circleEnd = Math.floor(uniformFactor * 0.85);\n\n\t\t\t\t\t\t\t// \tif (colCount > circleStart) {\n\t\t\t\t\t\t\t// \t\tconst colIndex = Math.abs(rowCount - circleDiameter);\n\t\t\t\t\t\t\t// \t\tif ((colIndex * colIndex) / 4 > (circleEnd - colCount) * 4) {\n\t\t\t\t\t\t\t// \t\t\tparticle.alpha = 0.1;\n\t\t\t\t\t\t\t// \t\t\tparticle.maxAlpha = 0.1;\n\t\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t\t// \t}\n\n\t\t\t\t\t\t\t// \tbreak;\n\n\t\t\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\t\t\tparticle.color = colors.ribbon[~~(Math.random() * colors.ribbon.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparticle.hasBorn = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!particle.hasBorn) {\n\t\t\t\tparticle.radius += (particle.maxRadius - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === particle.maxRadius) particle.hasBorn = true;\n\t\t\t}\n\n\t\t\tconst pureMouseParticleDistance = distanceTo(mouse, particle) - particle.radius;\n\t\t\tconst maxInteractiveEdge = 240;\n\t\t\tconst minInteractiveEdge = 120;\n\n\t\t\tif (pureMouseParticleDistance <= maxInteractiveEdge) {\n\t\t\t\t// Have interaction\n\t\t\t\tparticle.interactive = true;\n\t\t\t\tparticle.friction = (pureMouseParticleDistance - minInteractiveEdge) / (maxInteractiveEdge - minInteractiveEdge);\n\t\t\t\tif (particle.friction > 0.8) {\n\t\t\t\t\tparticle.friction = 1;\n\t\t\t\t}\n\t\t\t\t// particle.friction = 0;\n\t\t\t} else {\n\t\t\t\t// No interaction\n\t\t\t\tparticle.interactive = false;\n\t\t\t\tparticle.friction = 0;\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t * Render the particles.\n\t */\n\n\tfunction render() {\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tcontext.save();\n\t\t\tcontext.globalAlpha = particle.alpha;\n\t\t\tcontext.fillStyle = particle.color;\n\t\t\tcontext.font = `${50}px Lato, Arial, sans-serif`;\n\t\t\tcontext.fillText(particle.char, particle.x, particle.y);\n\t\t\tcontext.beginPath();\n\t\t\t// context.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n\t\t\tcontext.fill();\n\t\t\tcontext.restore();\n\t\t});\n\t}\n\n\t/*\n\t * Distance between two points.\n\t */\n\n\tfunction distanceTo(pointA: any, pointB: any) {\n\t\tconst dx = Math.abs(pointA.x - pointB.x);\n\t\tconst dy = Math.abs(pointA.y - pointB.y);\n\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/*\n\t * Useful function for random integer between [min, max].\n\t */\n\n\tconst randomBetween = (min: any, max: any) => ~~(Math.random() * (max - min + 1) + min);\n\n\tconst randomChar = (index: number) => {\n\t\tconst basicChars = ['未', '來'];\n\t\tif (options.mode === 'pattern') {\n\t\t\tif (index) {\n\t\t\t\tconst patternEncodedn\t\t\t\tconst chars = ['｜', ...Array.prototype.map.call(patternEncoded, (eachLetter) => eachLetter)];\n\t\t\t\treturn (chars[index] === '1') ? basicChars[Math.floor(Math.random() * basicChars.length)] : '｜';\n\t\t\t}\n\t\t\tconst randomChars = [...basicChars, '｜'];\n\t\t\treturn randomChars[Math.floor(Math.random() * randomChars.length)];\n\t\t}\n\t\tconst chars = ['｜', ...Array.prototype.map.call(options.chars || '｜', (eachLetter) => eachLetter)];\n\t\treturn chars[index || Math.floor(Math.random() * chars.length)] || '｜';\n\t};\n\n\t/*\n\t * Request new frame by Paul Irish.\n\t * 60 FPS.\n\t */\n\n\twindow.requestAnimFrame = (function () {\n\t\treturn window.requestAnimationFrame\n\t\t\t|| window.webkitRequestAnimationFrame\n\t\t\t|| window.mozRequestAnimationFrame\n\t\t\t|| window.oRequestAnimationFrame\n\t\t\t|| window.msRequestAnimationFrame\n\n\t\t\t|| function (callback) {\n\t\t\t\twindow.setTimeout(callback, 1000 / FPS);\n\t\t\t};\n\t}());\n\n\twindow.addEventListener('initCanvas', init, false);\n};\n\nexport const initCanvas = () => {\n\tconst someEv: any = document.createEvent('HTMLEvents');\n\tsomeEv.initEvent('initCanvas', true, true);\n\tsomeEv.eventName = 'initCanvas';\n\tdocument.dispatchEvent(someEv);\n};\n\nexport default createCanvas;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { createCanvas, initCanvas } from '../../helper/sandCanvas';\nimport './SandTest2.scss';\n\ninterface Props {\n\tchars?: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n\tfullscreen?: boolean;\n\tscreenMode?: string;\n}\n\nexport const SandTest2 = (\n\t{\n\t\tchars, particlesBackToOrigin, mode, fullscreen, screenMode = 'fullscreen',\n\t}: Props,\n) => {\n\tuseEffect(() => {\n\t\tconst formattedChars = (chars ? _.reverse([...chars]) : []).join('|');\n\t\tconst options: any = {\n\t\t\tchars: formattedChars,\n\t\t\tparticlesBackToOrigin,\n\t\t\tmode,\n\t\t\tscreenMode: fullscreen ? 'fullscreen' : screenMode,\n\t\t};\n\t\tcreateCanvas(window, options);\n\t\tinitCanvas();\n\t}, [chars, particlesBackToOrigin, mode, fullscreen, screenMode]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"sand-test-2\"\n\t\t>\n\t\t\t<div className=\"ip-slideshow-wrapper\">\n\t\t\t\t<div className=\"ip-slideshow\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest2;\n","import React, { useEffect, useState } from 'react';\nimport Particles from 'react-tsparticles';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport SandTest2 from '../SandTest2/SandTest2';\n\nimport './SandTest1.scss';\n\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\n\nexport const SandTest1 = ({ title, children }: Props) => {\n\tconst [inputMsg, setInputMsg] = useState<string>('');\n\tconst [msgs, setMsgs] = useState<string[]>(['這不是', '真正的', '文案']);\n\tconst [mask, setMask] = useState<string>('');\n\tconst [particlesBackToOrigin, setParticlesBackToOrigin] = useState<boolean>(true);\n\tconst [mode, setMode] = useState<string>('random');\n\tconst [editTextMode, setEditTextMode] = useState<boolean>(false); // Edit Msg\n\tconst [editMsg, setEditMsg] = useState<string>('');\n\tconst [fullscreen, setFulScreen] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tsetEditMsg(msgs.join('___'));\n\t}, [msgs]);\n\n\t// Language\n\tconsole.log('SandTest1 rendered');\n\n\tconst addMsg = () => {\n\t\tsetMsgs([\n\t\t\t...msgs,\n\t\t\tinputMsg,\n\t\t]);\n\t\tsetInputMsg('');\n\t};\n\n\tconst saveEditedMsg = () => {\n\t\tconst editedMsg: string[] = editMsg.split('___');\n\t\tsetMsgs(editedMsg);\n\t\tsetEditTextMode(false);\n\t};\n\n\tconst cancelEditedMsg = () => {\n\t\t// setMsgs([\n\t\t// \t...msgs,\n\t\t// \tinputMsg,\n\t\t// ]);\n\t\t// setInputMsg('');\n\t\tsetEditMsg(msgs.join('___'));\n\t\tsetEditTextMode(false);\n\t};\n\n\n\tconst params: any = {\n\t\tfpsLimit: 120,\n\t\tbackground: {\n\t\t\tcolor: {\n\t\t\t\tvalue: '#323031',\n\t\t\t},\n\t\t\tposition: '50% 50%',\n\t\t\trepeat: 'no-repeat',\n\t\t\tsize: 'cover',\n\t\t},\n\t\tinteractivity: {\n\t\t\tevents: {\n\t\t\t\tonClick: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tmode: 'push',\n\t\t\t\t},\n\t\t\t\tonHover: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tmode: 'repulse',\n\t\t\t\t\tparallax: {\n\t\t\t\t\t\tforce: 60,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmodes: {\n\t\t\t\trepulse: {\n\t\t\t\t\tdistance: 120,\n\t\t\t\t\tduration: 3,\n\t\t\t\t},\n\t\t\t\tgrab: {\n\t\t\t\t\tdistance: 50,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tparticles: {\n\t\t\tcolor: {\n\t\t\t\tvalue: '#ffffff',\n\t\t\t},\n\t\t\tcollisions: {\n\t\t\t\tenable: true,\n\t\t\t},\n\t\t\t// move: {\n\t\t\t// \tattract: {\n\t\t\t// \t\t// rotate: {\n\t\t\t// \t\t// \tx: 600,\n\t\t\t// \t\t// \ty: 1200,\n\t\t\t// \t\t// },\n\t\t\t// \t},\n\t\t\t// \tenable: true,\n\t\t\t// \toutModes: {\n\t\t\t// \t\tdefault: 'bounce',\n\t\t\t// \t\tbottom: 'bounce',\n\t\t\t// \t\tleft: 'bounce',\n\t\t\t// \t\tright: 'bounce',\n\t\t\t// \t\ttop: 'bounce',\n\t\t\t// \t},\n\t\t\t// \tspeed: 10,\n\t\t\t// },\n\t\t\tnumber: {\n\t\t\t\tdensity: {\n\t\t\t\t\tenable: true,\n\t\t\t\t},\n\t\t\t\tarrangement: 'equidistant',\n\t\t\t\tvalue: 600,\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tanimation: {\n\t\t\t\t\tspeed: 1,\n\t\t\t\t\tminimumValue: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t\tshape: {\n\t\t\t\toptions: {\n\t\t\t\t\tchar: {\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tfont: 'Roboto',\n\t\t\t\t\t\tstyle: '',\n\t\t\t\t\t\tvalue: (msgs.length > 0) ? msgs : ['字'],\n\t\t\t\t\t\tweight: '400',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttype: 'char',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 10,\n\t\t\t\tanimation: {\n\t\t\t\t\tspeed: 40,\n\t\t\t\t\tminimumValue: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tpolygon: {\n\t\t\t// draw: {\n\t\t\t// \tenable: !!mask,\n\t\t\t// \tstroke: {\n\t\t\t// \t\tcolor: {\n\t\t\t// \t\t\tvalue: 'rgba(255,255,255,0.2)',\n\t\t\t// \t\t},\n\t\t\t// \t\twidth: 0.5,\n\t\t\t// \t\topacity: 0.2,\n\t\t\t// \t},\n\t\t\t// },\n\t\t\tenable: !!mask,\n\t\t\tinline: {\n\t\t\t\tarrangement: '',\n\t\t\t},\n\t\t\tmove: {\n\t\t\t\tradius: 10,\n\t\t\t\ttype: 'path',\n\t\t\t},\n\t\t\tscale: 1.5,\n\t\t\ttype: 'inline',\n\t\t\turl: mask,\n\t\t},\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`sand-test ${fullscreen ? 'is-fullscreen' : ''}`}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"sand-test__body\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sand-test__board\"\n\t\t\t\t>\n\t\t\t\t\t<h2>SAND TABLE TEST 1</h2>\n\t\t\t\t\t<div className=\"sand-board\">\n\t\t\t\t\t\t<TransformWrapper\n\t\t\t\t\t\t\tdefaultScale={1}\n\t\t\t\t\t\t\t// defaultPositionX={-960}\n\t\t\t\t\t\t\t// defaultPositionY={450}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tminScale: 1,\n\t\t\t\t\t\t\t\tmaxScale: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tzoomIn, zoomOut, resetTransform, ...rest\n\t\t\t\t\t\t\t}: any) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TransformComponent>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"sand-board__zoomer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"sand-board__body\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Particles\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"1920px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"1440px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tparams={params}\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<SandTest2\n\t\t\t\t\t\t\t\t\t\t\t\t\tchars={msgs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticlesBackToOrigin={particlesBackToOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullscreen={fullscreen}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</TransformComponent>\n\t\t\t\t\t\t\t\t\t<div className=\"tools\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Fullscreen\" className=\"fullscreen-btn\" onClick={() => setFulScreen(!fullscreen)}>[ ]</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Reset Zoom\" onClick={resetTransform}>x</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TransformWrapper>\n\t\t\t\t\t</div>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<span className=\"ip-nav-left\" />\n\t\t\t\t\t\t<span className=\"ip-nav-right\" />\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sand-test__control\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sand-msg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h3>Messages</h3>\n\t\t\t\t\t\t{editTextMode ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"sand-msg-editpanel\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tclassName=\"sand-msg-textarea\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => setEditMsg(e.target.value)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{editMsg}\n\t\t\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-button\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => saveEditedMsg()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-button\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => cancelEditedMsg()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{`${msgs.join('___')}...`}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-button\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditTextMode(true)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"sand-msg-input\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={inputMsg}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Leave your msg\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setInputMsg(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => addMsg()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sand-options\">\n\t\t\t\t\t\t<h3>Options</h3>\n\t\t\t\t\t\t<div className=\"sand-option-group\">\n\t\t\t\t\t\t\t<h4 className=\"sand-option-label\">Particles move back?</h4>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setParticlesBackToOrigin((e.target.value === 'Y'))}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"Y\">Yes</option>\n\t\t\t\t\t\t\t\t<option value=\"N\">No</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sand-option-group\">\n\t\t\t\t\t\t\t<h4 className=\"sand-option-label\">Particles Arrangement</h4>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setMode(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"random\">Random</option>\n\t\t\t\t\t\t\t\t{/* <option value=\"uniform\">Uniform</option> */}\n\t\t\t\t\t\t\t\t<option value=\"pattern\">Pattern</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className=\"sand-mask\">\n\t\t\t\t\t\t<h3>Mask</h3>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tonChange={(e) => setMask(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsandMasks.map((item: any, index: number) => {\n\t\t\t\t\t\t\t\t\tconst key = `mask-${index}`;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest1;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\t// useParams,\n\tuseHistory,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './DemoLayout.scss';\n\nimport SandTest1 from '../../components/SandTest1/SandTest1';\n\nexport const DemoLayout = () => {\n\t// const { lang: paramLang } = useParams();\n\tconst { t } = useTranslation();\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"demo-layout\">\n\t\t\t\t<div className=\"demo-layout__body\">\n\t\t\t\t\t<h1 className=\"a11y-hidden\">Sand Table</h1>\n\t\t\t\t\t<main className=\"demo-layout__content\">\n\t\t\t\t\t\t<SandTest1 />\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\n\nexport default DemoLayout;\n","import React from 'react';\nimport './LoaderDots.scss';\n\ninterface Props {\n\tshow?: boolean;\n}\n\nexport const LoaderDots = ({ show = true }: Props) => (\n\t<div className={`loader-dots ${show ? 'is-show' : ''}`}>\n\t\t<span className=\"loader-dots__dot\" />\n\t\t<span className=\"loader-dots__dot\" />\n\t\t<span className=\"loader-dots__dot\" />\n\t\t<span className=\"loader-dots__dot\" />\n\t</div>\n);\n\nexport default LoaderDots;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport {\n\tLink, Element, Events, animateScroll as scroll, scrollSpy, scroller,\n} from 'react-scroll';\nimport SandTest2 from '../SandTest2/SandTest2';\nimport LoaderDots from '../LoaderDots/LoaderDots';\n\nimport './SandTable.scss';\n\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\n\nexport const SandTable = ({ title, children }: Props) => {\n\tconst [inputMsg, setInputMsg] = useState<string>('');\n\tconst [msgs, setMsgs] = useState<string[]>(['這不是', '真正的', '文案']);\n\tconst [particlesBackToOrigin, setParticlesBackToOrigin] = useState<boolean>(true); // Hidden options\n\tconst [mode, setMode] = useState<string>('pattern');\n\tconst [screenMode, setScreenMode] = useState<string>('halfscreen');\n\tconst [aboutOpen, setAboutOpen] = useState<boolean>(false); // Edit Msg\n\tconst [isTyping, setIsTyping] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\t// On load trigger resize to prevent sandtable display issue\n\t\tsetTimeout(() => {\n\t\t\twindow.dispatchEvent(new Event('resize'));\n\t\t}, 500);\n\t\tsetTimeout(() => {\n\t\t\tsetMode('uniform');\n\t\t}, 2500);\n\t}, []);\n\n\t// Scroll to section\n\tconst scrollToSec = (key: string) => {\n\t\tscroller.scrollTo(`anchor-${key}`, {\n\t\t\tduration: 1000,\n\t\t\tdelay: 50,\n\t\t\tsmooth: true,\n\t\t\toffset: -40,\n\t\t});\n\t};\n\n\t// Control Sandtable\n\tconst addMsg = () => {\n\t\tsetMsgs([\n\t\t\t...msgs,\n\t\t\tinputMsg,\n\t\t]);\n\t\tsetInputMsg('');\n\t};\n\n\t// Edit and remove msg\n\n\t// const [editTextMode, setEditTextMode] = useState<boolean>(false); // Edit Msg\n\t// const [editMsg, setEditMsg] = useState<string>('');\n\t// const [zoomValue, setZoomValue] = useState<number>(0);\n\n\t// useEffect(() => {\n\t// \tsetEditMsg(msgs.join('___'));\n\t// }, [msgs]);\n\n\t// const toggleFullscreen = () => {\n\t// \tconst targetMode = screenMode === 'halfscreen' ? 'fullscreen' : 'halfscreen';\n\t// \tsetScreenMode(targetMode);\n\t// };\n\t// const saveEditedMsg = () => {\n\t// \tconst editedMsg: string[] = editMsg.split('___');\n\t// \tsetMsgs(editedMsg);\n\t// \tsetEditTextMode(false);\n\t// };\n\n\t// const cancelEditedMsg = () => {\n\t// \tsetEditMsg(msgs.join('___'));\n\t// \tsetEditTextMode(false);\n\t// };\n\n\tconst onFocusInput = () => {\n\t\tsetIsTyping(true);\n\t};\n\n\tconst onBlurInput = () => {\n\t\tsetIsTyping(false);\n\t};\n\n\tconst toAbout = () => {\n\t\tscrollToSec('about');\n\t\tsetAboutOpen(!aboutOpen);\n\t};\n\n\n\tconst SandTableSidebar = () => (\n\t\t<div className=\"sandtable__sidebar\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => toAbout()}\n\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t>\n\t\t\t\tAbout\n\t\t\t</button>\n\t\t\t<a\n\t\t\t\thref=\"/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t>\n\t\t\t\tSupport\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\thref=\"/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t>\n\t\t\t\tFollow Us\n\t\t\t</a>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`sandtable is-${screenMode}`}\n\t\t>\n\t\t\t<div className=\"sandtable__mobile-menu\">\n\t\t\t\t<SandTableSidebar />\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"sandtable__body\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sandtable__board\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sandtable__head\">\n\t\t\t\t\t\t<img className=\"sandtable__logo-en\" src={`${window.PUBLIC_URL}/img/img-sandtable-title.svg`} alt=\"\" />\n\t\t\t\t\t\t<img className=\"sandtable__logo-zh\" src={`${window.PUBLIC_URL}/img/img-sandtable-title-zh.svg`} alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sandtable-board\">\n\t\t\t\t\t\t<TransformWrapper\n\t\t\t\t\t\t\tdefaultScale={1}\n\t\t\t\t\t\t\t// defaultPositionX={-960}\n\t\t\t\t\t\t\t// defaultPositionY={450}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tminScale: 1,\n\t\t\t\t\t\t\t\tmaxScale: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonZoomChange={(value: any) => {\n\t\t\t\t\t\t\t\twindow.canvasZoom = ((value.scale - 1) / 3) * 100;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tzoomIn, zoomOut, resetTransform, setScale, ...rest\n\t\t\t\t\t\t\t}: any) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TransformComponent>\n\t\t\t\t\t\t\t\t\t\t<div className=\"sandtable-board__zoomer\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sandtable-board__body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SandTest2\n\t\t\t\t\t\t\t\t\t\t\t\t\tchars={msgs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticlesBackToOrigin={particlesBackToOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\t\t\t\tscreenMode={screenMode}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</TransformComponent>\n\t\t\t\t\t\t\t\t\t<div className=\"tools-slider\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"tools-slider__wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t<ReactSlider\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"tools-slider__body\"\n\t\t\t\t\t\t\t\t\t\t\t\tthumbClassName=\"tools-slider__thumb\"\n\t\t\t\t\t\t\t\t\t\t\t\ttrackClassName=\"tools-slider__track\"\n\t\t\t\t\t\t\t\t\t\t\t\trenderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={window?.canvasZoom || 0}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={window?.canvasZoom || 0}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst scale = 1 + 3 * (val / 100);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetScale(scale);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button className=\"tools-slider__zoom-out\" type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t<button className=\"tools-slider__zoom-in\" type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t\t\t\t<div className=\"tools\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Fullscreen\" className=\"fullscreen-btn\" onClick={() => toggleFullscreen()}>[ ]</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Reset Zoom\" onClick={resetTransform}>x</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TransformWrapper>\n\t\t\t\t\t</div>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<span className=\"ip-nav-left\" />\n\t\t\t\t\t\t<span className=\"ip-nav-right\" />\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sandtable__control\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sandtable__head\">\n\t\t\t\t\t\t<div />\n\t\t\t\t\t\t<div className=\"sandtable__sitetitle\">\n\t\t\t\t\t\t\t<span>Write Together 一起書寫</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sandtable-interact-panel\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"sandtable-msg\">\n\t\t\t\t\t\t\t<div className=\"sandtable-msg__title\">\n\t\t\t\t\t\t\t\t一起書寫香港之書 Let’s continue the story of Hong Kong\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"sandtable-msg__msgs\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: `<em>致香港 To Hong Kong</em> <span></span> ${msgs.join(' <span class=\"sandtable-msg__dash\"></span> ')}` }} />\n\t\t\t\t\t\t\t\t<LoaderDots\n\t\t\t\t\t\t\t\t\tshow={isTyping}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sandtable-msg-input\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={inputMsg}\n\t\t\t\t\t\t\t\t\tplaceholder=\"一起書寫 Write Together \"\n\t\t\t\t\t\t\t\t\tonFocus={() => onFocusInput()}\n\t\t\t\t\t\t\t\t\tonBlur={() => onBlurInput()}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setInputMsg(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={() => addMsg()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`sandtable-about ${aboutOpen ? 'is-active' : ''}`}>\n\t\t\t\t\t\t\t<Element name=\"anchor-about\">\n\t\t\t\t\t\t\t\t<div className=\"sandtable-scrollpane\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"sandtable-about__title\">關於 About</h3>\n\t\t\t\t\t\t\t\t\t<div className=\"sandtable-about__desc\">\n\t\t\t\t\t\t\t\t\t\t<p>Hong Kong is a nexus and a vessel for resonance between multiple cultures: if captured in words, it would be a co-authored, dynamic book of interactions, transcending time, and cultural differences.</p>\n\t\t\t\t\t\t\t\t\t\t<p>Visitors are invited to develop stories, dreams, and speculations on the histories and futures of Hong Kong as they encounter the urban legend of Ah Kwan Showing the Way, a fantasy concocted by early British colonialists. Combined with the materiality and notion of fortune-telling rituals, the audience will play a game of Chinese Whispers with this local legend as the basis, each day regenerating the past and producing a ‘fortune’ for the future.</p>\n\t\t\t\t\t\t\t\t\t\t<p>Captured in sand, visitors’ written strokes will be projected in the mirroring sites and recorded over the duration of the exhibition to collate an archive of resonance on- site and online. The pavilion, therefore, presents an alternative archive, documenting the multiple, interwoven, non-linear histories of Hong Kong, and encouraging collective speculation beyond the rhetorical narratives of the city’s future.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Element>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<SandTableSidebar />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTable;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\t// useParams,\n\tuseHistory,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './MainLayout.scss';\n\nimport SandTable from '../../components/SandTable/SandTable';\n\nexport const MainLayout = () => {\n\t// const { lang: paramLang } = useParams();\n\tconst { t } = useTranslation();\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"main-layout\">\n\t\t\t\t<h1 className=\"a11y-hidden\">Sand Table</h1>\n\t\t\t\t<main className=\"main-layout__body\">\n\t\t\t\t\t<SandTable />\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\n\nexport default MainLayout;\n","import React, { useEffect, useState } from 'react';\nimport './PatternCreater.scss';\n\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\nconst canvasSize = 33;\n\nexport const PatternCreater = ({ title, children }: Props) => {\n\t// Language\n\t// const { t } = useTranslation();\n\t// const lang = t('key');\n\tconst [onPoints, setOnPoints] = useState<Array<number>>(new Array(canvasSize * canvasSize).fill(0));\n\n\tuseEffect(() => {\n\t\tconst savedPoints = localStorage.getItem('onPoints');\n\t\tif (!savedPoints) return;\n\t\tconst optionsArr: any = Array.prototype.map.call(savedPoints || '', (eachLetter) => Number(eachLetter));\n\t\tsetOnPoints(optionsArr);\n\t}, []);\n\n\n\tconst togglePoint = (index: number) => {\n\t\tconsole.log('togglePoint', index);\n\t\tconst newPoints = [...onPoints];\n\t\tnewPoints[index] = onPoints[index] ? 0 : 1;\n\t\tsetOnPoints(newPoints);\n\t\tlocalStorage.setItem('onPoints', newPoints.join(''));\n\t};\n\n\treturn (\n\t\t<div className=\"pattern-creater\">\n\t\t\t<div className=\"pattern-creater__board\">\n\t\t\t\t{\n\t\t\t\t\tonPoints.map((item: any, index: number) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={`${onPoints[index] ? 'is-active' : ''}`}\n\t\t\t\t\t\t\tkey={`point-${index + 1}`}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => togglePoint(index)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"a11y-hidden\">point</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"pattern-creater__result\">{onPoints.join('')}</div>\n\t\t</div>\n\t);\n};\n\nexport default PatternCreater;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from 'react-router-dom';\nimport DemoLayout from '../layout/DemoLayout/DemoLayout';\nimport MainLayout from '../layout/MainLayout/MainLayout';\nimport PatternCreater from '../components/PatternCreater/PatternCreater';\n\nexport default () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/pattern\" component={PatternCreater} />\n\t\t\t<Route exact path=\"/:lang?/demo\" component={DemoLayout} />\n\t\t\t<Route exact path=\"/:lang?\" component={MainLayout} />\n\t\t</Switch>\n\t</Router>\n);\n","\nimport React, { useEffect } from 'react';\nimport MainRouter from './router';\n\nconst App: React.FC = () => {\n\t// const { lang: paramLang } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<MainRouter />\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}