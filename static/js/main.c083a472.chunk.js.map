{"version":3,"sources":["helper/sandCanvas.ts","components/SandTest2/SandTest2.tsx","components/SandTest1/SandTest1.tsx","layout/MainLayout/MainLayout.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createCanvas","self","options","canvas","context","loopLogic","left","right","particles","text","nextText","shape","mouse","x","y","currentTransition","mode","layout","type","window","colors","random","uniform","drop","ribbon","onResize","width","innerWidth","height","scrollX","pageXOffset","document","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","onMouseMove","event","preventDefault","refScaler","querySelector","scale","getBoundingClientRect","offsetWidth","mousePosX","pageX","mousePosY","pageY","canvasLeft","canvasTop","top","resetMouse","onMouseOut","onTouchUp","onTouchMove","touches","onLeftClick","Math","max","classList","remove","handleClick","length","add","onRightClick","min","contains","action","tarType","direction","targetBind","addEventListener","style","cursor","targetUnbind","removeEventListener","loop","clearRect","forEach","call","particle","index","initX","initY","uniformFactor","floor","sqrt","rowCount","stepCount","colCount","rowUnit","colUnit","sin","cos","speed","friction","interactive","angle","targetDistX","targetDistY","initialized","particlesBackToOrigin","extra","slice","splice","updateTransition","alpha","maxAlpha","hasBorn","radius","bornSpeed","round","color","circleDiameter","circleStart","circleEnd","colIndex","abs","maxRadius","pureMouseParticleDistance","pointA","pointB","dx","dy","distanceTo","save","globalAlpha","fillStyle","font","fillText","char","beginPath","fill","restore","requestAnimFrame","randomBetween","randomChar","chars","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","init","slideshowContainer","existingCanvas","removeChild","createElement","appendChild","getContext","onresize","quantity","steps","push","ease","cancelAnimationFrame","createParticles","console","error","SandTest2","log","useEffect","someEv","createEvent","initEvent","eventName","dispatchEvent","initCanvas","className","SandTest1","title","children","useState","inputMsg","setInputMsg","msgs","setMsgs","setParticlesBackToOrigin","setMode","defaultScale","minScale","maxScale","zoomIn","zoomOut","resetTransform","onClick","join","value","placeholder","onChange","e","target","MainLayout","useTranslation","t","useHistory","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c083a472.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-undef */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-expressions */\nimport _ from 'lodash';\n\ndeclare global {\n\tinterface Window {\n\t\tdataLayer: any;\n\t\trequestAnimFrame: any;\n\t\tonload: any;\n\t\tparticles: any;\n\t}\n}\ninterface Options {\n\tchars: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n}\n\nexport const createCanvas = (self: any, options: Options) => {\n\tlet canvas: any;\n\tlet context: any;\n\tlet loopLogic: any;\n\tconst particlesNumber = 512;\n\tconst particles: any = [];\n\tconst text: any = [];\n\tlet nextText = [];\n\tconst shape: any = {};\n\tlet mouse = {\n\t\tx: -99999,\n\t\ty: -99999,\n\t};\n\tlet currentTransition = options?.mode || 'random';\n\tlet left: any; let right: any;\n\tlet layout = 0;\n\t// const type = ['random', 'uniform', 'drop', 'ribbon'];\n\tconst type = ['random', 'uniform', 'pattern'];\n\tconst FPS = 660;\n\twindow.particles = particles;\n\t/*\n\t* List colors.\n\t*/\n\n\tconst colors = {\n\t\trandom: ['#FFF', '#FFF'],\n\t\tuniform: ['#FFF', '#FFF'],\n\t\tdrop: ['#1d75cf', '#3a5945'],\n\t\tribbon: ['#702744', '#f98d00'],\n\t};\n\n\t/*\n\t * Init.\n\t */\n\n\tfunction init() {\n\t\twindow.removeEventListener('initCanvas', init, false);\n\t\tconst slideshowContainer = document.querySelector('.ip-slideshow');\n\t\tconst existingCanvas = document.querySelector('canvas');\n\n\t\tif (existingCanvas) {\n\t\t\tslideshowContainer?.removeChild(existingCanvas);\n\t\t\tcanvas = null;\n\t\t}\n\n\t\tcanvas = document.createElement('canvas');\n\n\t\tcanvas.width = 1920;\n\t\tcanvas.height = 1440;\n\n\t\tslideshowContainer?.appendChild(canvas);\n\n\t\t// Browser supports canvas?\n\t\tif (capable()) {\n\t\t\tcontext = canvas.getContext('2d');\n\n\t\t\t// Events\n\t\t\tif ('ontouchmove' in window) {\n\t\t\t\tcanvas.addEventListener('touchup', onTouchUp, false);\n\t\t\t\tcanvas.addEventListener('touchmove', onTouchMove, false);\n\t\t\t} else {\n\t\t\t\tcanvas.addEventListener('mousemove', onMouseMove, false);\n\t\t\t\tcanvas.addEventListener('mouseout', onMouseOut, false);\n\t\t\t}\n\n\t\t\t// Arrows\n\t\t\thandleClick('bind', 'left');\n\t\t\thandleClick('bind', 'right');\n\n\t\t\twindow.onresize = onResize;\n\n\t\t\tcreateParticles();\n\n\t\t\t// Arrows elements\n\t\t\tleft = document.querySelector('.ip-nav-left');\n\t\t\tright = document.querySelector('.ip-nav-right');\n\n\t\t\t// Show right arrow\n\t\t\tright?.classList.add('ip-nav-show');\n\t\t} else {\n\t\t\tconsole.error('Sorry, switch to a better browser to see this experiment.');\n\t\t}\n\t}\n\n\t/*\n\t * Checks if browser supports canvas element.\n\t */\n\n\tfunction capable() {\n\t\treturn canvas.getContext && canvas.getContext('2d');\n\t}\n\n\t/*\n\t * On resize window event.\n\t */\n\n\tfunction onResize() {\n\t\tcanvas.width = window.innerWidth;\n\t\tcanvas.height = 500;\n\n\t\t// Reset the text particles, and align again on the center of screen\n\t\tnextText = [];\n\t\t// updateText();\n\t}\n\n\tfunction scrollX() {\n\t\treturn window.pageXOffset || window.document.documentElement.scrollLeft;\n\t}\n\n\tfunction scrollY() {\n\t\treturn window.pageYOffset || window.document.documentElement.scrollTop;\n\t}\n\n\t/*\n\t * Mouse move event.\n\t */\n\n\tfunction onMouseMove(event: any) {\n\t\tevent.preventDefault();\n\t\tconst refScaler: any = document.querySelector('.react-transform-element');\n\t\tconst scale = refScaler ? (1 / (refScaler.getBoundingClientRect().width / refScaler.offsetWidth)) * 4 : 1;\n\t\tconst mousePosX = event.pageX;\n\t\tconst mousePosY = event.pageY;\n\t\tconst canvasLeft = scrollX() + canvas.getBoundingClientRect().left;\n\t\tconst canvasTop = scrollY() + canvas.getBoundingClientRect().top;\n\t\tmouse.x = (mousePosX - canvasLeft) * scale;\n\t\tmouse.y = (mousePosY - canvasTop) * scale;\n\t}\n\n\tconst resetMouse = () => {\n\t\t// Reset mouse position\n\t\tmouse = {\n\t\t\tx: -1000,\n\t\t\ty: -1000,\n\t\t};\n\t};\n\n\tconst onMouseOut = () => {\n\t\tresetMouse();\n\t};\n\n\t/*\n\t * Touch up event.\n\t */\n\n\tfunction onTouchUp(event: any) {\n\t\tevent.preventDefault();\n\t\tresetMouse();\n\t}\n\n\t/*\n\t * Touch move event.\n\t */\n\n\tfunction onTouchMove(event: any) {\n\t\tevent.preventDefault();\n\t\tmouse.x = event.touches[0].pageX - (scrollX() + canvas.getBoundingClientRect().left);\n\t\tmouse.y = event.touches[0].pageY - (scrollY() + canvas.getBoundingClientRect().top);\n\t}\n\n\t/*\n\t * Left click event.\n\t */\n\n\tfunction onLeftClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.max(0, --layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 0) {\n\t\t\tleft.classList.remove('ip-nav-show');\n\t\t\thandleClick('unbind', 'left');\n\t\t\treturn;\n\t\t}\n\n\t\tif (layout === type.length - 1) {\n\t\t\tright.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Right click event.\n\t */\n\n\tfunction onRightClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.min(type.length, ++layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 1) {\n\t\t\tleft?.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'left');\n\t\t}\n\t\tif (layout === type.length - 1) {\n\t\t\tif (right?.classList.contains('ip-nav-show')) {\n\t\t\t\tright?.classList.remove('ip-nav-show');\n\t\t\t}\n\t\t\thandleClick('unbind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Handle click events for arrows.\n\t */\n\n\tfunction handleClick(action: any, tarType: any) {\n\t\tconst direction = tarType === 'left' ? onLeftClick : onRightClick;\n\n\t\tswitch (action) {\n\t\t\tcase 'bind':\n\t\t\t\tconst targetBind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetBind) {\n\t\t\t\t\ttargetBind.addEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetBind.addEventListener('click', direction, false);\n\t\t\t\t\ttargetBind.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'unbind':\n\t\t\t\tconst targetUnbind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetUnbind) {\n\t\t\t\t\ttargetUnbind.removeEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetUnbind.removeEventListener('click', direction, false);\n\t\t\t\t\ttargetUnbind.style.cursor = 'default';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Create particles.\n\t */\n\n\tfunction createParticles() {\n\t\tfor (let quantity = 0, len = particlesNumber; quantity < len; quantity++) {\n\t\t\tvar x; var y; var steps;\n\n\t\t\t// var steps = Math.PI * 2 * quantity / len;\n\n\t\t\t// x = canvas.width * 0.5 + 10 * Math.cos(steps);\n\t\t\t// y = 180 + 10 * Math.sin(steps);\n\n\t\t\tvar steps: any = quantity / len;\n\t\t\tvar initX = randomBetween(0, canvas.width);\n\t\t\tvar initY = randomBetween(0, canvas.height);\n\t\t\tx = initX;\n\t\t\ty = initY - randomBetween(0, canvas.height * 3);\n\n\t\t\tconst radius = randomBetween(0, 1);\n\t\t\tconst hasBorn = !(radius > 0 || radius < 12);\n\n\t\t\tconst color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\tparticles.push({\n\t\t\t\tfriction: 0,\n\n\t\t\t\tchar: randomChar(),\n\t\t\t\tinitX,\n\t\t\t\tinitY,\n\t\t\t\tx,\n\t\t\t\ty,\n\n\t\t\t\thasBorn,\n\n\t\t\t\tease: 0.04 + Math.random() * 0.06,\n\t\t\t\tbornSpeed: 0.07 + Math.random() * 0.07,\n\n\t\t\t\talpha: 0,\n\t\t\t\tmaxAlpha: 0.7 + Math.random() * 0.4,\n\n\t\t\t\tradius,\n\t\t\t\tmaxRadius: 3,\n\n\t\t\t\tcolor,\n\t\t\t\tinteractive: false,\n\n\t\t\t\tangle: 0,\n\n\t\t\t\tsteps,\n\t\t\t\tstepCount: quantity,\n\n\t\t\t});\n\t\t}\n\n\t\t// Go!\n\t\t// updateText();\n\t\tif (loopLogic) {\n\t\t\twindow.cancelAnimationFrame(loopLogic);\n\t\t}\n\t\tloop();\n\t}\n\n\t/*\n\t * Transitions handler.\n\t */\n\n\tfunction updateTransition() {\n\t\t/* --- Shapes ---- */\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tswitch (currentTransition) {\n\t\t\t\tcase 'random':\n\n\t\t\t\t\tshape.x = particle.initX;\n\t\t\t\t\tshape.y = particle.initY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'uniform':\n\t\t\t\tcase 'pattern':\n\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\tconst rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\tconst colUnit = canvas.height / uniformFactor;\n\n\t\t\t\t\tshape.x = rowCount * rowUnit;\n\t\t\t\t\tshape.y = colCount * colUnit;\n\n\t\t\t\t\t// var limit; var\n\t\t\t\t\t// \tsteps;\n\n\t\t\t\t\t// limit = (particles.length * 0.5) - 1;\n\t\t\t\t\t// steps = Math.PI * 2 * (index / limit);\n\n\t\t\t\t\t// // First oval\n\t\t\t\t\t// if (index < [].slice.call(particles, 0, limit).length) {\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 80 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 140 * Math.sin(steps);\n\t\t\t\t\t// } else {\n\t\t\t\t\t// \t// Second oval\n\t\t\t\t\t// \tlimit = (particles.length * 0.5);\n\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 140 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 80 * Math.sin(steps);\n\t\t\t\t\t// }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t// case 'drop':\n\n\t\t\t\t// \tshape.x = canvas.width * 0.5 + 90 * (1 - Math.sin(index)) * Math.cos(index);\n\t\t\t\t// \tshape.y = 320 + 140 * (-Math.sin(index) - 1);\n\n\t\t\t\t// \tbreak;\n\n\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\tshape.x = canvas.width * 0.5 + 90 * (Math.sin(index)) * Math.cos(index);\n\t\t\t\t\tshape.y = 320 + 140 * (-Math.sin(index) - 1);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// speed\n\t\t\tconst speed = 0.08 * (1 - particle.friction);\n\t\t\tif (!particle.interactive) {\n\t\t\t\t// particle.x += ((shape.x + Math.cos(particle.angle) * 5) - particle.x) * speed;\n\t\t\t\t// particle.y += ((shape.y + Math.sin(particle.angle) * 5) - particle.y) * speed;\n\t\t\t\tconst targetDistX = shape.x - particle.x;\n\t\t\t\tconst targetDistY = shape.y - particle.y;\n\t\t\t\tif (!particle.initialized || options.particlesBackToOrigin) {\n\t\t\t\t\tparticle.x += targetDistX * speed;\n\t\t\t\t\tparticle.y += targetDistY * speed;\n\t\t\t\t\tparticle.angle += 0.0001;\n\t\t\t\t\tparticle.initialized = (targetDistX < 0.05 && targetDistY < 0.05);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// particle.x += ((mouse.x + Math.sin(particle.angle) * 120) - particle.x) * 0.08;\n\t\t\t\t// particle.y += ((mouse.y + Math.cos(particle.angle) * 120) - particle.y) * 0.08;\n\t\t\t\tparticle.x -= (mouse.x - particle.x) * speed;\n\t\t\t\tparticle.y -= (mouse.y - particle.y) * speed;\n\t\t\t\tparticle.angle += 0.08;\n\t\t\t}\n\n\t\t\t// particle.angle += 0.08;\n\t\t});\n\n\t\t// Remove extra particles\n\t\tif (nextText.length < text.length) {\n\t\t\tconst extra = [].slice.call(text, nextText.length, text.length);\n\n\t\t\t// Remove extra text particles\n\t\t\tfor (let index = 0; index < extra.length; index++) text.splice(index, 1);\n\t\t}\n\t}\n\n\t/*\n\t * Loop logic.\n\t */\n\n\tfunction loop() {\n\t\tclear();\n\t\tupdate();\n\t\trender();\n\n\t\tloopLogic = window.requestAnimFrame(loop);\n\t}\n\n\t/*\n\t * Clear the whole screen.\n\t */\n\n\tfunction clear() {\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t}\n\n\t/*\n\t * Update the particles.\n\t */\n\n\tfunction update() {\n\t\tupdateTransition();\n\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tparticle.alpha += (particle.maxAlpha - particle.alpha) * 0.05;\n\n\t\t\tif (particle.hasBorn) {\n\t\t\t\tparticle.radius += (0 - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === 0) {\n\t\t\t\t\t// Color transition\n\t\t\t\t\tswitch (currentTransition) {\n\t\t\t\t\t\tcase 'random':\n\n\t\t\t\t\t\t\tparticle.color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'uniform':\n\n\t\t\t\t\t\t\tparticle.color = colors.uniform[~~(Math.random() * colors.uniform.length)];\n\n\t\t\t\t\t\t\t// const rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\t\t\t// const colUnit = canvas.width / uniformFactor;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'pattern':\n\n\t\t\t\t\t\t\tparticle.color = colors.drop[~~(Math.random() * colors.drop.length)];\n\t\t\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\t\t\tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\t\t\tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\t\t\tconst circleDiameter = Math.floor(uniformFactor / 2);\n\t\t\t\t\t\t\tconst circleStart = Math.floor(uniformFactor * 0.35);\n\t\t\t\t\t\t\tconst circleEnd = Math.floor(uniformFactor * 0.85);\n\n\t\t\t\t\t\t\tif (colCount > circleStart) {\n\t\t\t\t\t\t\t\tconst colIndex = Math.abs(rowCount - circleDiameter);\n\t\t\t\t\t\t\t\tif ((colIndex * colIndex) / 4 > (circleEnd - colCount) * 4) {\n\t\t\t\t\t\t\t\t\tparticle.alpha = 0.1;\n\t\t\t\t\t\t\t\t\tparticle.maxAlpha = 0.1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\t\t\tparticle.color = colors.ribbon[~~(Math.random() * colors.ribbon.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparticle.hasBorn = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!particle.hasBorn) {\n\t\t\t\tparticle.radius += (particle.maxRadius - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === particle.maxRadius) particle.hasBorn = true;\n\t\t\t}\n\n\t\t\tconst pureMouseParticleDistance = distanceTo(mouse, particle) - particle.radius;\n\t\t\tconst maxInteractiveEdge = 240;\n\t\t\tconst minInteractiveEdge = 120;\n\n\t\t\tif (pureMouseParticleDistance <= maxInteractiveEdge) {\n\t\t\t\t// Have interaction\n\t\t\t\tparticle.interactive = true;\n\t\t\t\tparticle.friction = (pureMouseParticleDistance - minInteractiveEdge) / (maxInteractiveEdge - minInteractiveEdge);\n\t\t\t\tif (particle.friction > 0.8) {\n\t\t\t\t\tparticle.friction = 1;\n\t\t\t\t}\n\t\t\t\t// particle.friction = 0;\n\t\t\t} else {\n\t\t\t\t// No interaction\n\t\t\t\tparticle.interactive = false;\n\t\t\t\tparticle.friction = 0;\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t * Render the particles.\n\t */\n\n\tfunction render() {\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tcontext.save();\n\t\t\tcontext.globalAlpha = particle.alpha;\n\t\t\tcontext.fillStyle = particle.color;\n\t\t\tcontext.font = `${24}px Lato, Arial, sans-serif`;\n\t\t\tcontext.fillText(particle.char, particle.x, particle.y);\n\t\t\tcontext.beginPath();\n\t\t\t// context.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n\t\t\tcontext.fill();\n\t\t\tcontext.restore();\n\t\t});\n\t}\n\n\t/*\n\t * Distance between two points.\n\t */\n\n\tfunction distanceTo(pointA: any, pointB: any) {\n\t\tconst dx = Math.abs(pointA.x - pointB.x);\n\t\tconst dy = Math.abs(pointA.y - pointB.y);\n\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/*\n\t * Useful function for random integer between [min, max].\n\t */\n\n\tconst randomBetween = (min: any, max: any) => ~~(Math.random() * (max - min + 1) + min);\n\n\tconst randomChar = () => {\n\t\tconst chars = options.chars || ['字'];\n\t\treturn chars[Math.floor(Math.random() * chars.length)];\n\t};\n\n\t/*\n\t * Request new frame by Paul Irish.\n\t * 60 FPS.\n\t */\n\n\twindow.requestAnimFrame = (function () {\n\t\treturn window.requestAnimationFrame\n\t\t\t|| window.webkitRequestAnimationFrame\n\t\t\t|| window.mozRequestAnimationFrame\n\t\t\t|| window.oRequestAnimationFrame\n\t\t\t|| window.msRequestAnimationFrame\n\n\t\t\t|| function (callback) {\n\t\t\t\twindow.setTimeout(callback, 1000 / FPS);\n\t\t\t};\n\t}());\n\n\twindow.addEventListener('initCanvas', init, false);\n};\n\nexport const initCanvas = () => {\n\tconst someEv: any = document.createEvent('HTMLEvents');\n\tsomeEv.initEvent('initCanvas', true, true);\n\tsomeEv.eventName = 'initCanvas';\n\tdocument.dispatchEvent(someEv);\n};\n\nexport default createCanvas;\n","import React, { useEffect, useState } from 'react';\nimport Particles from 'react-particles-js';\nimport {createCanvas, initCanvas} from '../../helper/sandCanvas';\nimport './SandTest2.scss';\n\ninterface Props {\n\tchars?: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n}\n\nexport const SandTest2 = ({ chars, particlesBackToOrigin, mode }: Props) => {\n\t// Language\n\tconsole.log('SandTest1 rendered');\n\n\tuseEffect(() => {\n\t\tconst options: any = {\n\t\t\tchars,\n\t\t\tparticlesBackToOrigin,\n\t\t\tmode,\n\t\t};\n\t\tcreateCanvas(window, options);\n\t\tinitCanvas();\n\t}, [chars, particlesBackToOrigin, mode]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"sand-test-2\"\n\t\t>\n\t\t\t<div className=\"ip-slideshow-wrapper\">\n\t\t\t\t<div className=\"ip-slideshow\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest2;\n","import React, { useEffect, useState } from 'react';\nimport Particles from 'react-tsparticles';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport SandTest2 from '../SandTest2/SandTest2';\n\nimport './SandTest1.scss';\n\nconst sandMasks = [\n\t{\n\t\tlabel: 'No Mask',\n\t\turl: '',\n\t},\n\t{\n\t\tlabel: 'Deer',\n\t\turl: './img/test-deer.svg',\n\t},\n\t{\n\t\tlabel: 'Circle',\n\t\turl: './img/test-circle.svg',\n\t},\n\t{\n\t\tlabel: 'Sphere',\n\t\turl: './img/sphere-grid.svg',\n\t},\n\t{\n\t\tlabel: 'TEST',\n\t\turl: './img/test.svg',\n\t},\n];\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\n\nexport const SandTest1 = ({ title, children }: Props) => {\n\tconst [inputMsg, setInputMsg] = useState<string>('');\n\tconst [msgs, setMsgs] = useState<string[]>(['這不是', '真正的', '文案']);\n\tconst [mask, setMask] = useState<string>('');\n\tconst [particlesBackToOrigin, setParticlesBackToOrigin] = useState<boolean>(true);\n\tconst [mode, setMode] = useState<string>('random');\n\n\t// Language\n\tconsole.log('SandTest1 rendered');\n\n\tconst addMsg = () => {\n\t\tsetMsgs([\n\t\t\t...msgs,\n\t\t\tinputMsg,\n\t\t]);\n\t\tsetInputMsg('');\n\t};\n\n\tconst params: any = {\n\t\tfpsLimit: 120,\n\t\tbackground: {\n\t\t\tcolor: {\n\t\t\t\tvalue: '#323031',\n\t\t\t},\n\t\t\tposition: '50% 50%',\n\t\t\trepeat: 'no-repeat',\n\t\t\tsize: 'cover',\n\t\t},\n\t\tinteractivity: {\n\t\t\tevents: {\n\t\t\t\tonClick: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tmode: 'push',\n\t\t\t\t},\n\t\t\t\tonHover: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tmode: 'repulse',\n\t\t\t\t\tparallax: {\n\t\t\t\t\t\tforce: 60,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmodes: {\n\t\t\t\trepulse: {\n\t\t\t\t\tdistance: 120,\n\t\t\t\t\tduration: 3,\n\t\t\t\t},\n\t\t\t\tgrab: {\n\t\t\t\t\tdistance: 50,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tparticles: {\n\t\t\tcolor: {\n\t\t\t\tvalue: '#ffffff',\n\t\t\t},\n\t\t\tcollisions: {\n\t\t\t\tenable: true,\n\t\t\t},\n\t\t\t// move: {\n\t\t\t// \tattract: {\n\t\t\t// \t\t// rotate: {\n\t\t\t// \t\t// \tx: 600,\n\t\t\t// \t\t// \ty: 1200,\n\t\t\t// \t\t// },\n\t\t\t// \t},\n\t\t\t// \tenable: true,\n\t\t\t// \toutModes: {\n\t\t\t// \t\tdefault: 'bounce',\n\t\t\t// \t\tbottom: 'bounce',\n\t\t\t// \t\tleft: 'bounce',\n\t\t\t// \t\tright: 'bounce',\n\t\t\t// \t\ttop: 'bounce',\n\t\t\t// \t},\n\t\t\t// \tspeed: 10,\n\t\t\t// },\n\t\t\tnumber: {\n\t\t\t\tdensity: {\n\t\t\t\t\tenable: true,\n\t\t\t\t},\n\t\t\t\tarrangement: 'equidistant',\n\t\t\t\tvalue: 600,\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tanimation: {\n\t\t\t\t\tspeed: 1,\n\t\t\t\t\tminimumValue: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t\tshape: {\n\t\t\t\toptions: {\n\t\t\t\t\tchar: {\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tfont: 'Roboto',\n\t\t\t\t\t\tstyle: '',\n\t\t\t\t\t\tvalue: (msgs.length > 0) ? msgs : ['字'],\n\t\t\t\t\t\tweight: '400',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttype: 'char',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 10,\n\t\t\t\tanimation: {\n\t\t\t\t\tspeed: 40,\n\t\t\t\t\tminimumValue: 0.1,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tpolygon: {\n\t\t\t// draw: {\n\t\t\t// \tenable: !!mask,\n\t\t\t// \tstroke: {\n\t\t\t// \t\tcolor: {\n\t\t\t// \t\t\tvalue: 'rgba(255,255,255,0.2)',\n\t\t\t// \t\t},\n\t\t\t// \t\twidth: 0.5,\n\t\t\t// \t\topacity: 0.2,\n\t\t\t// \t},\n\t\t\t// },\n\t\t\tenable: !!mask,\n\t\t\tinline: {\n\t\t\t\tarrangement: '',\n\t\t\t},\n\t\t\tmove: {\n\t\t\t\tradius: 10,\n\t\t\t\ttype: 'path',\n\t\t\t},\n\t\t\tscale: 1.5,\n\t\t\ttype: 'inline',\n\t\t\turl: mask,\n\t\t},\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"sand-test\"\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"sand-test__body\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sand-test__board\"\n\t\t\t\t>\n\t\t\t\t\t<h2>SAND TABLE TEST 1</h2>\n\t\t\t\t\t<div className=\"sand-board\">\n\t\t\t\t\t\t<TransformWrapper\n\t\t\t\t\t\t\tdefaultScale={1}\n\t\t\t\t\t\t\t// defaultPositionX={-960}\n\t\t\t\t\t\t\t// defaultPositionY={450}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tminScale: 1,\n\t\t\t\t\t\t\t\tmaxScale: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tzoomIn, zoomOut, resetTransform, ...rest\n\t\t\t\t\t\t\t}: any) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TransformComponent>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"sand-board__zoomer\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"sand-board__body\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Particles\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"1920px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"1440px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tparams={params}\n\t\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<SandTest2\n\t\t\t\t\t\t\t\t\t\t\t\t\tchars={msgs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticlesBackToOrigin={particlesBackToOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</TransformComponent>\n\t\t\t\t\t\t\t\t\t<div className=\"tools\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={resetTransform}>x</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TransformWrapper>\n\t\t\t\t\t</div>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<span className=\"ip-nav-left\" />\n\t\t\t\t\t\t<span className=\"ip-nav-right\" />\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sand-test__control\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sand-msg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h3>Messages</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{`${msgs.join('___')}...`}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"sand-msg-input\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={inputMsg}\n\t\t\t\t\t\t\t\tplaceholder=\"Leave you msg\"\n\t\t\t\t\t\t\t\tonChange={(e) => setInputMsg(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => addMsg()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sand-options\">\n\t\t\t\t\t\t<h3>Options</h3>\n\t\t\t\t\t\t<div className=\"sand-option-group\">\n\t\t\t\t\t\t\t<h4 className=\"sand-option-label\">Particles move back?</h4>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setParticlesBackToOrigin((e.target.value === 'Y'))}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"Y\">Yes</option>\n\t\t\t\t\t\t\t\t<option value=\"N\">No</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sand-option-group\">\n\t\t\t\t\t\t\t<h4 className=\"sand-option-label\">Particles Arrangement</h4>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setMode(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"random\">Random</option>\n\t\t\t\t\t\t\t\t<option value=\"uniform\">Uniform</option>\n\t\t\t\t\t\t\t\t<option value=\"pattern\">Pattern + Color</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className=\"sand-mask\">\n\t\t\t\t\t\t<h3>Mask</h3>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tonChange={(e) => setMask(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsandMasks.map((item: any, index: number) => {\n\t\t\t\t\t\t\t\t\tconst key = `mask-${index}`;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest1;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\t// useParams,\n\tuseHistory,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './MainLayout.scss';\nimport Header from '../Header/Header';\nimport SideBar from '../SideBar/SideBar';\n\nimport SandTest1 from '../../components/SandTest1/SandTest1';\nimport SandTest2 from '../../components/SandTest2/SandTest2';\n\nexport const MainLayout = () => {\n\t// const { lang: paramLang } = useParams();\n\tconst { t } = useTranslation();\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"main-layout\">\n\t\t\t\t<div className=\"main-layout__body\">\n\t\t\t\t\t<h1 className=\"a11y-hidden\">NWD50</h1>\n\t\t\t\t\t<main className=\"main-layout__content\">\n\t\t\t\t\t\t<SandTest1 />\n\t\t\t\t\t\t{/* <SandTest2 /> */}\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\n\nexport default MainLayout;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from 'react-router-dom';\nimport MainLayout from '../layout/MainLayout/MainLayout';\n\nexport default () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/:lang?\" component={MainLayout} />\n\t\t</Switch>\n\t</Router>\n);\n","\nimport React, { useEffect } from 'react';\nimport MainRouter from './router';\n\nconst App: React.FC = () => {\n\t// const { lang: paramLang } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<MainRouter />\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}